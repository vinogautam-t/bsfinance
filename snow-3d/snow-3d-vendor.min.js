function PxLoaderImage(e,t,i){var r=this,o=null;this.img=new Image,this.tags=t,this.priority=i;var n=function(){"complete"===r.img.readyState&&(l(),o.onLoad(r))},a=function(){l(),o.onLoad(r)},s=function(){l(),o.onError(r)},l=function(){r.unbind("load",a),r.unbind("readystatechange",n),r.unbind("error",s)};this.start=function(t){o=t,r.bind("load",a),r.bind("readystatechange",n),r.bind("error",s),r.img.src=e},this.checkStatus=function(){r.img.complete&&(l(),o.onLoad(r))},this.onTimeout=function(){l(),r.img.complete?o.onLoad(r):o.onTimeout(r)},this.getName=function(){return e},this.bind=function(e,t){r.img.addEventListener?r.img.addEventListener(e,t,!1):r.img.attachEvent&&r.img.attachEvent("on"+e,t)},this.unbind=function(e,t){r.img.removeEventListener?r.img.removeEventListener(e,t,!1):r.img.detachEvent&&r.img.detachEvent("on"+e,t)}}!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e("object"==typeof exports?require("jquery"):jQuery)}(function(e){function t(e){return s.raw?e:encodeURIComponent(e)}function i(e){return s.raw?e:decodeURIComponent(e)}function r(e){return t(s.json?JSON.stringify(e):String(e))}function o(e){0===e.indexOf('"')&&(e=e.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,"\\"));try{return e=decodeURIComponent(e.replace(a," ")),s.json?JSON.parse(e):e}catch(t){}}function n(t,i){var r=s.raw?t:o(t);return e.isFunction(i)?i(r):r}var a=/\+/g,s=e.cookie=function(o,a,l){if(arguments.length>1&&!e.isFunction(a)){if(l=e.extend({},s.defaults,l),"number"==typeof l.expires){var h=l.expires,u=l.expires=new Date;u.setTime(+u+864e5*h)}return document.cookie=[t(o),"=",r(a),l.expires?"; expires="+l.expires.toUTCString():"",l.path?"; path="+l.path:"",l.domain?"; domain="+l.domain:"",l.secure?"; secure":""].join("")}for(var c=o?void 0:{},f=document.cookie?document.cookie.split("; "):[],d=0,p=f.length;p>d;d++){var m=f[d].split("="),E=i(m.shift()),g=m.join("=");if(o&&o===E){c=n(g,a);break}o||void 0===(g=n(g))||(c[E]=g)}return c};s.defaults={},e.removeCookie=function(t,i){return void 0===e.cookie(t)?!1:(e.cookie(t,"",e.extend({},i,{expires:-1})),!e.cookie(t))}}),function(e){function t(e){e=e||{},this.settings=e,null==e.statusInterval&&(e.statusInterval=5e3),null==e.loggingDelay&&(e.loggingDelay=2e4),null==e.noProgressTimeout&&(e.noProgressTimeout=1/0);var t,r=[],o=[],n=Date.now(),a={QUEUED:0,WAITING:1,LOADED:2,ERROR:3,TIMEOUT:4},s=function(e){return null==e?[]:Array.isArray(e)?e:[e]};this.add=function(e){e.tags=new i(e.tags),null==e.priority&&(e.priority=1/0),r.push({resource:e,status:a.QUEUED})},this.addProgressListener=function(e,t){o.push({callback:e,tags:new i(t)})},this.addCompletionListener=function(e,t){o.push({tags:new i(t),callback:function(t){t.completedCount===t.totalCount&&e(t)}})};var l=function(e){e=s(e);var t=function(t){for(var i=t.resource,r=1/0,o=0;o<i.tags.length;o++)for(var n=0;n<Math.min(e.length,r)&&!(i.tags.all[o]===e[n]&&r>n&&(r=n,0===r))&&0!==r;n++);return r};return function(e,i){var r=t(e),o=t(i);return o>r?-1:r>o?1:e.priority<i.priority?-1:e.priority>i.priority?1:0}};this.start=function(e){t=Date.now();var i=l(e);r.sort(i);for(var o=0,n=r.length;n>o;o++){var s=r[o];s.status=a.WAITING,s.resource.start(this)}setTimeout(h,100)};var h=function(){for(var t=!1,i=Date.now()-n,o=i>=e.noProgressTimeout,s=i>=e.loggingDelay,l=0,u=r.length;u>l;l++){var c=r[l];c.status===a.WAITING&&(c.resource.checkStatus&&c.resource.checkStatus(),c.status===a.WAITING&&(o?c.resource.onTimeout():t=!0))}s&&t&&f(),t&&setTimeout(h,e.statusInterval)};this.isBusy=function(){for(var e=0,t=r.length;t>e;e++)if(r[e].status===a.QUEUED||r[e].status===a.WAITING)return!0;return!1};var u=function(e,t){var i,s,l,h,u,f=null;for(i=0,s=r.length;s>i;i++)if(r[i].resource===e){f=r[i];break}if(null!=f&&f.status===a.WAITING)for(f.status=t,n=Date.now(),l=e.tags.length,i=0,s=o.length;s>i;i++)h=o[i],u=0===h.tags.length?!0:e.tags.intersects(h.tags),u&&c(f,h)};this.onLoad=function(e){u(e,a.LOADED)},this.onError=function(e){u(e,a.ERROR)},this.onTimeout=function(e){u(e,a.TIMEOUT)};var c=function(e,t){var i,o,n,s,l=0,h=0;for(i=0,o=r.length;o>i;i++)n=r[i],s=!1,s=0===t.tags.length?!0:n.resource.tags.intersects(t.tags),s&&(h++,(n.status===a.LOADED||n.status===a.ERROR||n.status===a.TIMEOUT)&&l++);t.callback({resource:e.resource,loaded:e.status===a.LOADED,error:e.status===a.ERROR,timeout:e.status===a.TIMEOUT,completedCount:l,totalCount:h})},f=this.log=function(e){if(window.console){var i=Math.round((Date.now()-t)/1e3);window.console.log("PxLoader elapsed: "+i+" sec");for(var o=0,n=r.length;n>o;o++){var s=r[o];if(e||s.status===a.WAITING){var l="PxLoader: #"+o+" "+s.resource.getName();switch(s.status){case a.QUEUED:l+=" (Not Started)";break;case a.WAITING:l+=" (Waiting)";break;case a.LOADED:l+=" (Loaded)";break;case a.ERROR:l+=" (Error)";break;case a.TIMEOUT:l+=" (Timeout)"}s.resource.tags.length>0&&(l+=" Tags: ["+s.resource.tags.all.join(",")+"]"),window.console.log(l)}}}}}function i(e){if(this.all=[],this.first=null,this.length=0,this.lookup={},e){if(Array.isArray(e))this.all=e.slice(0);else if("object"==typeof e)for(var t in e)e.hasOwnProperty(t)&&this.all.push(t);else this.all.push(e);this.length=this.all.length,this.length>0&&(this.first=this.all[0]);for(var i=0;i<this.length;i++)this.lookup[this.all[i]]=!0}}i.prototype.intersects=function(e){if(0===this.length||0===e.length)return!1;if(1===this.length&&1===e.length)return this.first===e.first;if(e.length<this.length)return e.intersects(this);for(var t in this.lookup)if(e.lookup[t])return!0;return!1},"function"==typeof define&&define.amd&&define("PxLoader",[],function(){return t}),e.PxLoader=t}(this),Date.now||(Date.now=function(){return(new Date).getTime()}),Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),PxLoader.prototype.addImage=function(e,t,i){var r=new PxLoaderImage(e,t,i);return this.add(r),r.img},"function"==typeof define&&define.amd&&define("PxLoaderImage",[],function(){return PxLoaderImage});var WebGLDetector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var e=document.createElement("canvas");return!!window.WebGLRenderingContext&&(e.getContext("webgl")||e.getContext("experimental-webgl"))}catch(t){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,i,r;e=e||{},t=void 0!==e.parent?e.parent:document.body,i=void 0!==e.id?e.id:"oldie",r=Detector.getWebGLErrorMessage(),r.id=i,t.appendChild(r)}},THREE={REVISION:"64"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(e,t){if(Object.keys)for(var i=Object.keys(t),r=0,o=i.length;o>r;r++){var n=i[r];Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}else{var a={}.hasOwnProperty;for(var n in t)a.call(t,n)&&(e[n]=t[n])}return e},function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!self.requestAnimationFrame;++i)self.requestAnimationFrame=self[t[i]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[i]+"CancelAnimationFrame"]||self[t[i]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var i=Date.now(),r=Math.max(0,16-(i-e)),o=self.setTimeout(function(){t(i+r)},r);return e=i+r,o}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var i=this._listeners,r=i[e];if(void 0!==r){var o=r.indexOf(t);-1!==o&&r.splice(o,1)}}},dispatchEvent:function(){var e=[];return function(t){if(void 0!==this._listeners){var i=this._listeners,r=i[t.type];if(void 0!==r){t.target=this;for(var o=r.length,n=0;o>n;n++)e[n]=r[n];for(var n=0;o>n;n++)e[n].call(this,t)}}}}()},THREE.Texture=function(e,t,i,r,o,n,a,s,l){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==o?o:THREE.LinearFilter,this.minFilter=void 0!==n?n:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,i,r,o,n,a,s,l,h,u){THREE.Texture.call(this,null,n,a,s,l,h,r,o,u),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.LoadingManager=function(e,t,i){var r=this,o=0,n=0;this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(){n++},this.itemEnd=function(e){o++,void 0!==r.onProgress&&r.onProgress(e,o,n),o===n&&void 0!==r.onLoad&&r.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,i,r){var o=this,n=document.createElement("img");return void 0!==t&&n.addEventListener("load",function(){o.manager.itemEnd(e),t(this)},!1),void 0!==i&&n.addEventListener("progress",function(e){i(e)},!1),void 0!==r&&n.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(n.crossOrigin=this.crossOrigin),n.src=e,o.manager.itemStart(e),n},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i){var r=new THREE.ImageLoader;r.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,t),n=r.load(e,function(){o.needsUpdate=!0,i&&i(o)});return o.image=n,o.sourceFile=e,o},loadCompressedTexture:function(e,t,i,r){var o=new THREE.CompressedTexture;o.mapping=t;var n=new XMLHttpRequest;return n.onload=function(){var e=n.response,t=THREE.ImageUtils.parseDDS(e,!0);o.format=t.format,o.mipmaps=t.mipmaps,o.image.width=t.width,o.image.height=t.height,o.generateMipmaps=!1,o.needsUpdate=!0,i&&i(o)},n.onerror=r,n.open("GET",e,!0),n.responseType="arraybuffer",n.send(null),o},loadTextureCube:function(e,t,i,r){var o=[];o.loadCount=0;var n=new THREE.Texture;n.image=o,void 0!==t&&(n.mapping=t),n.flipY=!1;for(var a=0,s=e.length;s>a;++a){var l=new Image;o[a]=l,l.onload=function(){o.loadCount+=1,6===o.loadCount&&(n.needsUpdate=!0,i&&i(n))},l.onerror=r,l.crossOrigin=this.crossOrigin,l.src=e[a]}return n},loadCompressedTextureCube:function(e,t,i,r){var o=[];o.loadCount=0;var n=new THREE.CompressedTexture;n.image=o,void 0!==t&&(n.mapping=t),n.flipY=!1,n.generateMipmaps=!1;var a=function(e,t){return function(){var r=e.response,a=THREE.ImageUtils.parseDDS(r,!0);t.format=a.format,t.mipmaps=a.mipmaps,t.width=a.width,t.height=a.height,o.loadCount+=1,6===o.loadCount&&(n.format=a.format,n.needsUpdate=!0,i&&i(n))}};if(e instanceof Array)for(var s=0,l=e.length;l>s;++s){var h={};o[s]=h;var u=new XMLHttpRequest;u.onload=a(u,h),u.onerror=r;var c=e[s];u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}else{var c=e,u=new XMLHttpRequest;u.onload=function(){var e=u.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var r=t.mipmaps.length/t.mipmapCount,a=0;r>a;a++){o[a]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[a].mipmaps.push(t.mipmaps[a*t.mipmapCount+s]),o[a].format=t.format,o[a].width=t.width,o[a].height=t.height}n.format=t.format,n.needsUpdate=!0,i&&i(n)}},u.onerror=r,u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}return n},loadDDSTexture:function(e,t,i,r){var o=[];o.loadCount=0;var n=new THREE.CompressedTexture;n.image=o,void 0!==t&&(n.mapping=t),n.flipY=!1,n.generateMipmaps=!1;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap)for(var r=t.mipmaps.length/t.mipmapCount,s=0;r>s;s++){o[s]={mipmaps:[]};for(var l=0;l<t.mipmapCount;l++)o[s].mipmaps.push(t.mipmaps[s*t.mipmapCount+l]),o[s].format=t.format,o[s].width=t.width,o[s].height=t.height}else n.image.width=t.width,n.image.height=t.height,n.mipmaps=t.mipmaps;n.format=t.format,n.needsUpdate=!0,i&&i(n)},a.onerror=r,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),n},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function r(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}function o(e,t,i,r){for(var o=i*r*4,n=new Uint8Array(e,t,o),a=new Uint8Array(o),s=0,l=0,h=0;r>h;h++)for(var u=0;i>u;u++){var c=n[l];l++;var f=n[l];l++;var d=n[l];l++;var p=n[l];l++,a[s]=d,s++,a[s]=f,s++,a[s]=c,s++,a[s]=p,s++}return a}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},a=542327876,s=131072,l=512,h=4,u=i("DXT1"),c=i("DXT3"),f=i("DXT5"),d=31,p=0,m=1,E=2,g=3,v=4,T=7,_=20,x=21,y=22,R=23,b=24,S=25,w=26,M=28,H=new Int32Array(e,0,d);if(H[p]!==a)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),n;if(!H[_]&h)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),n;var A,C=H[x],D=!1;switch(C){case u:A=8,n.format=THREE.RGB_S3TC_DXT1_Format;break;case c:A=16,n.format=THREE.RGBA_S3TC_DXT3_Format;break;case f:A=16,n.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==H[y]&&16711680&H[R]&&65280&H[b]&&255&H[S]&&4278190080&H[w]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",r(C)),n;D=!0,A=64,n.format=THREE.RGBAFormat}n.mipmapCount=1,H[E]&s&&t!==!1&&(n.mipmapCount=Math.max(1,H[T])),n.isCubemap=H[M]&l?!0:!1,n.width=H[v],n.height=H[g];for(var P=H[m]+4,L=n.width,F=n.height,U=n.isCubemap?6:1,z=0;U>z;z++){for(var B=0;B<n.mipmapCount;B++){if(D)var I=o(e,P,L,F),N=I.length;else var N=Math.max(4,L)/4*Math.max(4,F)/4*A,I=new Uint8Array(e,P,N);var O={data:I,width:L,height:F};n.mipmaps.push(O),P+=N,L=Math.max(.5*L,1),F=Math.max(.5*F,1)}L=n.width,F=n.height}return n},getNormalMap:function(e,t){var i=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},o=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var n=e.width,a=e.height,s=document.createElement("canvas");s.width=n,s.height=a;var l=s.getContext("2d");l.drawImage(e,0,0);for(var h=l.getImageData(0,0,n,a).data,u=l.createImageData(n,a),c=u.data,f=0;n>f;f++)for(var d=0;a>d;d++){var p=0>d-1?0:d-1,m=d+1>a-1?a-1:d+1,E=0>f-1?0:f-1,g=f+1>n-1?n-1:f+1,v=[],T=[0,0,h[4*(d*n+f)]/255*t];v.push([-1,0,h[4*(d*n+E)]/255*t]),v.push([-1,-1,h[4*(p*n+E)]/255*t]),v.push([0,-1,h[4*(p*n+f)]/255*t]),v.push([1,-1,h[4*(p*n+g)]/255*t]),v.push([1,0,h[4*(d*n+g)]/255*t]),v.push([1,1,h[4*(m*n+g)]/255*t]),v.push([0,1,h[4*(m*n+f)]/255*t]),v.push([-1,1,h[4*(m*n+E)]/255*t]);for(var _=[],x=v.length,y=0;x>y;y++){var R=v[y],b=v[(y+1)%x];R=r(R,T),b=r(b,T),_.push(o(i(R,b)))}for(var S=[0,0,0],y=0;y<_.length;y++)S[0]+=_[y][0],S[1]+=_[y][1],S[2]+=_[y][2];S[0]/=_.length,S[1]/=_.length,S[2]/=_.length;var w=4*(d*n+f);c[w]=(S[0]+1)/2*255|0,c[w+1]=(S[1]+1)/2*255|0,c[w+2]=255*S[2]|0,c[w+3]=255}return l.putImageData(u,0,0),s},generateDataTexture:function(e,t,i){for(var r=e*t,o=new Uint8Array(3*r),n=Math.floor(255*i.r),a=Math.floor(255*i.g),s=Math.floor(255*i.b),l=0;r>l;l++)o[3*l]=n,o[3*l+1]=a,o[3*l+2]=s;var h=new THREE.DataTexture(o,e,t,THREE.RGBFormat);return h.needsUpdate=!0,h}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),r=0;return function(){for(var o=0;36>o;o++)8==o||13==o||18==o||23==o?i[o]="-":14==o?i[o]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,i[o]=t[19==o?3&e|8:e]);return i.join("")}}(),clamp:function(e,t,i){return t>e?t:e>i?i:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,i,r,o){return r+(e-t)*(o-r)/(i-t)},smoothstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*(3-2*e))},smootherstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}()},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return t*t+i*i},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Quaternion=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e,this._updateEuler()},get y(){return this._y},set y(e){this._y=e,this._updateEuler()},get z(){return this._z},set z(e){this._z=e,this._updateEuler()},get w(){return this._w},set w(e){this._w=e,this._updateEuler()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._updateEuler(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this._updateEuler(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=Math.cos(e._x/2),r=Math.cos(e._y/2),o=Math.cos(e._z/2),n=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=n*r*o+i*a*s,this._y=i*a*o-n*r*s,this._z=i*r*s+n*a*o,this._w=i*r*o-n*a*s):"YXZ"===e.order?(this._x=n*r*o+i*a*s,this._y=i*a*o-n*r*s,this._z=i*r*s-n*a*o,this._w=i*r*o+n*a*s):"ZXY"===e.order?(this._x=n*r*o-i*a*s,this._y=i*a*o+n*r*s,this._z=i*r*s+n*a*o,this._w=i*r*o-n*a*s):"ZYX"===e.order?(this._x=n*r*o-i*a*s,this._y=i*a*o+n*r*s,this._z=i*r*s-n*a*o,this._w=i*r*o+n*a*s):"YZX"===e.order?(this._x=n*r*o+i*a*s,this._y=i*a*o+n*r*s,this._z=i*r*s-n*a*o,this._w=i*r*o-n*a*s):"XZY"===e.order&&(this._x=n*r*o-i*a*s,this._y=i*a*o-n*r*s,this._z=i*r*s+n*a*o,this._w=i*r*o+n*a*s),t!==!1&&this._updateEuler(),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._updateEuler(),this},setFromRotationMatrix:function(e){var t,i=e.elements,r=i[0],o=i[4],n=i[8],a=i[1],s=i[5],l=i[9],h=i[2],u=i[6],c=i[10],f=r+s+c;return f>0?(t=.5/Math.sqrt(f+1),this._w=.25/t,this._x=(u-l)*t,this._y=(n-h)*t,this._z=(a-o)*t):r>s&&r>c?(t=2*Math.sqrt(1+r-s-c),this._w=(u-l)/t,this._x=.25*t,this._y=(o+a)/t,this._z=(n+h)/t):s>c?(t=2*Math.sqrt(1+s-r-c),this._w=(n-h)/t,this._x=(o+a)/t,this._y=.25*t,this._z=(l+u)/t):(t=2*Math.sqrt(1+c-r-s),this._w=(a-o)/t,this._x=(n+h)/t,this._y=(l+u)/t,this._z=.25*t),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e._x,r=e._y,o=e._z,n=e._w,a=t._x,s=t._y,l=t._z,h=t._w;return this._x=i*h+n*a+r*l-o*s,this._y=r*h+n*s+o*a-i*l,this._z=o*h+n*l+i*s-r*a,this._w=n*h-i*a-r*s-o*l,this._updateEuler(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this._x,r=this._y,o=this._z,n=this._w,a=n*e._w+i*e._x+r*e._y+o*e._z;if(0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=n,this._x=i,this._y=r,this._z=o,this;var s=Math.acos(a),l=Math.sqrt(1-a*a);if(Math.abs(l)<.001)return this._w=.5*(n+this._w),this._x=.5*(i+this._x),this._y=.5*(r+this._y),this._z=.5*(o+this._z),this;var h=Math.sin((1-t)*s)/l,u=Math.sin(t*s)/l;return this._w=n*h+this._w*u,this._x=i*h+this._x*u,this._y=r*h+this._y*u,this._z=o*h+this._z*u,this._updateEuler(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z,o=e.elements;return this.x=o[0]*t+o[3]*i+o[6]*r,this.y=o[1]*t+o[4]*i+o[7]*r,this.z=o[2]*t+o[5]*i+o[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12],this.y=o[1]*t+o[5]*i+o[9]*r+o[13],this.z=o[2]*t+o[6]*i+o[10]*r+o[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z,o=e.elements,n=1/(o[3]*t+o[7]*i+o[11]*r+o[15]);return this.x=(o[0]*t+o[4]*i+o[8]*r+o[12])*n,this.y=(o[1]*t+o[5]*i+o[9]*r+o[13])*n,this.z=(o[2]*t+o[6]*i+o[10]*r+o[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,o=e.x,n=e.y,a=e.z,s=e.w,l=s*t+n*r-a*i,h=s*i+a*t-o*r,u=s*r+o*i-n*t,c=-o*t-n*i-a*r;return this.x=l*s+c*-o+h*-a-u*-n,this.y=h*s+c*-n+u*-o-l*-a,this.z=u*s+c*-a+l*-n-h*-o,this},transformDirection:function(e){var t=this.x,i=this.y,r=this.z,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r,this.y=o[1]*t+o[5]*i+o[9]*r,this.z=o[2]*t+o[6]*i+o[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);
var i=this.x,r=this.y,o=this.z;return this.x=r*e.z-o*e.y,this.y=o*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){var i=e.x,r=e.y,o=e.z,n=t.x,a=t.y,s=t.z;return this.x=r*s-o*a,this.y=o*n-i*s,this.z=i*a-r*n,this},angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=i,this.z=r,this},setFromMatrixColumn:function(e,t){var i=4*e,r=t.elements;return this.x=r[i],this.y=r[i+1],this.z=r[i+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var e=new THREE.Quaternion;return function(t){return t instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,i){return this.applyQuaternion(e.setFromAxisAngle(t,i)),this}}(),projectOnVector:function(){var e=new THREE.Vector3;return function(t){e.copy(t).normalize();var i=this.dot(e);return this.copy(e).multiplyScalar(i)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t).multiplyScalar(2),this.subVectors(e,this)}}()}),THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,o=this.w,n=e.elements;return this.x=n[0]*t+n[4]*i+n[8]*r+n[12]*o,this.y=n[1]*t+n[5]*i+n[9]*r+n[13]*o,this.z=n[2]*t+n[6]*i+n[10]*r+n[14]*o,this.w=n[3]*t+n[7]*i+n[11]*r+n[15]*o,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r,o,n=.01,a=.1,s=e.elements,l=s[0],h=s[4],u=s[8],c=s[1],f=s[5],d=s[9],p=s[2],m=s[6],E=s[10];if(Math.abs(h-c)<n&&Math.abs(u-p)<n&&Math.abs(d-m)<n){if(Math.abs(h+c)<a&&Math.abs(u+p)<a&&Math.abs(d+m)<a&&Math.abs(l+f+E-3)<a)return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,v=(f+1)/2,T=(E+1)/2,_=(h+c)/4,x=(u+p)/4,y=(d+m)/4;return g>v&&g>T?n>g?(i=0,r=.707106781,o=.707106781):(i=Math.sqrt(g),r=_/i,o=x/i):v>T?n>v?(i=.707106781,r=0,o=.707106781):(r=Math.sqrt(v),i=_/r,o=y/r):n>T?(i=.707106781,r=.707106781,o=0):(o=Math.sqrt(T),i=x/o,r=y/o),this.set(i,r,o,t),this}var R=Math.sqrt((m-d)*(m-d)+(u-p)*(u-p)+(c-h)*(c-h));return Math.abs(R)<.001&&(R=1),this.x=(m-d)/R,this.y=(u-p)/R,this.z=(c-h)/R,this.w=Math.acos((l+f+E-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Matrix3=function(e,t,i,r,o,n,a,s,l){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==o?o:1,n||0,a||0,s||0,void 0!==l?l:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,i,r,o,n,a,s,l){var h=this.elements;return h[0]=e,h[3]=t,h[6]=i,h[1]=r,h[4]=o,h[7]=n,h[2]=a,h[5]=s,h[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;r>i;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyMatrix3(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],o=e[3],n=e[4],a=e[5],s=e[6],l=e[7],h=e[8];return t*n*h-t*a*l-i*o*h+i*a*s+r*o*l-r*n*s},getInverse:function(e,t){var i=e.elements,r=this.elements;r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4];var o=i[0]*r[0]+i[1]*r[3]+i[2]*r[6];if(0===o){var n="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(n);return console.warn(n),this.identity(),this}return this.multiplyScalar(1/o),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,i,r,o,n,a,s,l,h,u,c,f,d,p,m){this.elements=new Float32Array(16);var E=this.elements;E[0]=void 0!==e?e:1,E[4]=t||0,E[8]=i||0,E[12]=r||0,E[1]=o||0,E[5]=void 0!==n?n:1,E[9]=a||0,E[13]=s||0,E[2]=l||0,E[6]=h||0,E[10]=void 0!==u?u:1,E[14]=c||0,E[3]=f||0,E[7]=d||0,E[11]=p||0,E[15]=void 0!==m?m:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,i,r,o,n,a,s,l,h,u,c,f,d,p,m){var E=this.elements;return E[0]=e,E[4]=t,E[8]=i,E[12]=r,E[1]=o,E[5]=n,E[9]=a,E[13]=s,E[2]=l,E[6]=h,E[10]=u,E[14]=c,E[3]=f,E[7]=d,E[11]=p,E[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var i=this.elements,r=t.elements,o=1/e.set(r[0],r[1],r[2]).length(),n=1/e.set(r[4],r[5],r[6]).length(),a=1/e.set(r[8],r[9],r[10]).length();return i[0]=r[0]*o,i[1]=r[1]*o,i[2]=r[2]*o,i[4]=r[4]*n,i[5]=r[5]*n,i[6]=r[6]*n,i[8]=r[8]*a,i[9]=r[9]*a,i[10]=r[10]*a,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,i=e.x,r=e.y,o=e.z,n=Math.cos(i),a=Math.sin(i),s=Math.cos(r),l=Math.sin(r),h=Math.cos(o),u=Math.sin(o);if("XYZ"===e.order){var c=n*h,f=n*u,d=a*h,p=a*u;t[0]=s*h,t[4]=-s*u,t[8]=l,t[1]=f+d*l,t[5]=c-p*l,t[9]=-a*s,t[2]=p-c*l,t[6]=d+f*l,t[10]=n*s}else if("YXZ"===e.order){var m=s*h,E=s*u,g=l*h,v=l*u;t[0]=m+v*a,t[4]=g*a-E,t[8]=n*l,t[1]=n*u,t[5]=n*h,t[9]=-a,t[2]=E*a-g,t[6]=v+m*a,t[10]=n*s}else if("ZXY"===e.order){var m=s*h,E=s*u,g=l*h,v=l*u;t[0]=m-v*a,t[4]=-n*u,t[8]=g+E*a,t[1]=E+g*a,t[5]=n*h,t[9]=v-m*a,t[2]=-n*l,t[6]=a,t[10]=n*s}else if("ZYX"===e.order){var c=n*h,f=n*u,d=a*h,p=a*u;t[0]=s*h,t[4]=d*l-f,t[8]=c*l+p,t[1]=s*u,t[5]=p*l+c,t[9]=f*l-d,t[2]=-l,t[6]=a*s,t[10]=n*s}else if("YZX"===e.order){var T=n*s,_=n*l,x=a*s,y=a*l;t[0]=s*h,t[4]=y-T*u,t[8]=x*u+_,t[1]=u,t[5]=n*h,t[9]=-a*h,t[2]=-l*h,t[6]=_*u+x,t[10]=T-y*u}else if("XZY"===e.order){var T=n*s,_=n*l,x=a*s,y=a*l;t[0]=s*h,t[4]=-u,t[8]=l*h,t[1]=T*u+y,t[5]=n*h,t[9]=_*u-x,t[2]=x*u-_,t[6]=a*h,t[10]=y*u+T}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,o=e.z,n=e.w,a=i+i,s=r+r,l=o+o,h=i*a,u=i*s,c=i*l,f=r*s,d=r*l,p=o*l,m=n*a,E=n*s,g=n*l;return t[0]=1-(f+p),t[4]=u-g,t[8]=c+E,t[1]=u+g,t[5]=1-(h+p),t[9]=d-m,t[2]=c-E,t[6]=d+m,t[10]=1-(h+f),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,o,n){var a=this.elements;return i.subVectors(r,o).normalize(),0===i.length()&&(i.z=1),e.crossVectors(n,i).normalize(),0===e.length()&&(i.x+=1e-4,e.crossVectors(n,i).normalize()),t.crossVectors(i,e),a[0]=e.x,a[4]=t.x,a[8]=i.x,a[1]=e.y,a[5]=t.y,a[9]=i.y,a[2]=e.z,a[6]=t.z,a[10]=i.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,o=this.elements,n=i[0],a=i[4],s=i[8],l=i[12],h=i[1],u=i[5],c=i[9],f=i[13],d=i[2],p=i[6],m=i[10],E=i[14],g=i[3],v=i[7],T=i[11],_=i[15],x=r[0],y=r[4],R=r[8],b=r[12],S=r[1],w=r[5],M=r[9],H=r[13],A=r[2],C=r[6],D=r[10],P=r[14],L=r[3],F=r[7],U=r[11],z=r[15];return o[0]=n*x+a*S+s*A+l*L,o[4]=n*y+a*w+s*C+l*F,o[8]=n*R+a*M+s*D+l*U,o[12]=n*b+a*H+s*P+l*z,o[1]=h*x+u*S+c*A+f*L,o[5]=h*y+u*w+c*C+f*F,o[9]=h*R+u*M+c*D+f*U,o[13]=h*b+u*H+c*P+f*z,o[2]=d*x+p*S+m*A+E*L,o[6]=d*y+p*w+m*C+E*F,o[10]=d*R+p*M+m*D+E*U,o[14]=d*b+p*H+m*P+E*z,o[3]=g*x+v*S+T*A+_*L,o[7]=g*y+v*w+T*C+_*F,o[11]=g*R+v*M+T*D+_*U,o[15]=g*b+v*H+T*P+_*z,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;r>i;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyProjection(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],o=e[12],n=e[1],a=e[5],s=e[9],l=e[13],h=e[2],u=e[6],c=e[10],f=e[14],d=e[3],p=e[7],m=e[11],E=e[15];return d*(+o*s*u-r*l*u-o*a*c+i*l*c+r*a*f-i*s*f)+p*(+t*s*f-t*l*c+o*n*c-r*n*f+r*l*h-o*s*h)+m*(+t*l*u-t*a*f-o*n*u+i*n*f+o*a*h-i*l*h)+E*(-r*a*h-t*s*u+t*a*c+r*n*u-i*n*c+i*s*h)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var i=this.elements,r=e.elements,o=r[0],n=r[4],a=r[8],s=r[12],l=r[1],h=r[5],u=r[9],c=r[13],f=r[2],d=r[6],p=r[10],m=r[14],E=r[3],g=r[7],v=r[11],T=r[15];i[0]=u*m*g-c*p*g+c*d*v-h*m*v-u*d*T+h*p*T,i[4]=s*p*g-a*m*g-s*d*v+n*m*v+a*d*T-n*p*T,i[8]=a*c*g-s*u*g+s*h*v-n*c*v-a*h*T+n*u*T,i[12]=s*u*d-a*c*d-s*h*p+n*c*p+a*h*m-n*u*m,i[1]=c*p*E-u*m*E-c*f*v+l*m*v+u*f*T-l*p*T,i[5]=a*m*E-s*p*E+s*f*v-o*m*v-a*f*T+o*p*T,i[9]=s*u*E-a*c*E-s*l*v+o*c*v+a*l*T-o*u*T,i[13]=a*c*f-s*u*f+s*l*p-o*c*p-a*l*m+o*u*m,i[2]=h*m*E-c*d*E+c*f*g-l*m*g-h*f*T+l*d*T,i[6]=s*d*E-n*m*E-s*f*g+o*m*g+n*f*T-o*d*T,i[10]=n*c*E-s*h*E+s*l*g-o*c*g-n*l*T+o*h*T,i[14]=s*h*f-n*c*f-s*l*d+o*c*d+n*l*m-o*h*m,i[3]=u*d*E-h*p*E-u*f*g+l*p*g+h*f*v-l*d*v,i[7]=n*p*E-a*d*E+a*f*g-o*p*g-n*f*v+o*d*v,i[11]=a*h*E-n*u*E-a*l*g+o*u*g+n*l*v-o*h*v,i[15]=n*u*f-a*h*f+a*l*d-o*u*d-n*l*p+o*h*p;var _=o*i[0]+l*i[4]+f*i[8]+E*i[12];if(0==_){var x="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(x);return console.warn(x),this.identity(),this}return this.multiplyScalar(1/_),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,i=e.x,r=e.y,o=e.z;return t[0]*=i,t[4]*=r,t[8]*=o,t[1]*=i,t[5]*=r,t[9]*=o,t[2]*=i,t[6]*=r,t[10]*=o,t[3]*=i,t[7]*=r,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(i,r)))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),o=1-i,n=e.x,a=e.y,s=e.z,l=o*n,h=o*a;return this.set(l*n+i,l*a-r*s,l*s+r*a,0,l*a+r*s,h*a+i,h*s-r*n,0,l*s-r*a,h*s+r*n,o*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},compose:function(e,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(i,r,o){var n=this.elements,a=e.set(n[0],n[1],n[2]).length(),s=e.set(n[4],n[5],n[6]).length(),l=e.set(n[8],n[9],n[10]).length();i.x=n[12],i.y=n[13],i.z=n[14],t.elements.set(this.elements);var h=1/a,u=1/s,c=1/l;return t.elements[0]*=h,t.elements[1]*=h,t.elements[2]*=h,t.elements[4]*=u,t.elements[5]*=u,t.elements[6]*=u,t.elements[8]*=c,t.elements[9]*=c,t.elements[10]*=c,r.setFromRotationMatrix(t),o.x=a,o.y=s,o.z=l,this}}(),makeFrustum:function(e,t,i,r,o,n){var a=this.elements,s=2*o/(t-e),l=2*o/(r-i),h=(t+e)/(t-e),u=(r+i)/(r-i),c=-(n+o)/(n-o),f=-2*n*o/(n-o);return a[0]=s,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=c,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){var o=i*Math.tan(THREE.Math.degToRad(.5*e)),n=-o,a=n*t,s=o*t;return this.makeFrustum(a,s,n,o,i,r)},makeOrthographic:function(e,t,i,r,o,n){var a=this.elements,s=t-e,l=i-r,h=n-o,u=(t+e)/s,c=(i+r)/l,f=(n+o)/h;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2/l,a[9]=0,a[13]=-c,a[2]=0,a[6]=0,a[10]=-2/h,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this._rotation=new THREE.Euler,this._quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this._rotation._quaternion=this.quaternion,this._quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(e){this._rotation=e,this._rotation._quaternion=this._quaternion,this._quaternion._euler=this._rotation,this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(e){this._quaternion=e,this._quaternion._euler=this._rotation,this._rotation._quaternion=this._quaternion,this._quaternion._updateEuler()},get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var e=new THREE.Matrix4;return function(t){this.matrix.multiplyMatrices(t,this.matrix),this.position.setFromMatrixPosition(this.matrix),this.scale.setFromMatrixScale(this.matrix),e.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(e)}}(),setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,i){return e.setFromAxisAngle(t,i),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,i){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(i)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1);for(var i=this;void 0!==i.parent;)i=i.parent;void 0!==i&&i instanceof THREE.Scene&&i.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;i>t;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var o=this.children[i];if(o.id===e)return o;if(t===!0&&(o=o.getObjectById(e,t),void 0!==o))return o}return void 0},getObjectByName:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var o=this.children[i];if(o.name===e)return o;if(t===!0&&(o=o.getObjectByName(e,t),void 0!==o))return o}return void 0},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;i>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),t===!0)for(var i=0;i<this.children.length;i++){var r=this.children[i];e.add(r.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;r>i;i++)t=e[i],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){var i=t||new THREE.Vector2;return i.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var i=t||new THREE.Vector2;return i.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){var i=e.copy(t).clamp(this.min,this.max);return i.sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;r>i;i++)this.addPoint(e[i])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var i=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var r=t.geometry.vertices,o=0,n=r.length;n>o;o++)e.copy(r[o]),e.applyMatrix4(t.matrixWorld),i.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){var i=t||new THREE.Vector3;return i.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))
},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){var i=t||new THREE.Vector3;return i.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var i=e.copy(t).clamp(this.min,this.max);return i.sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var i=t||new THREE.Sphere;return i.center=this.center(),i.radius=.5*this.size(e).length(),i}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,i){var r=this.center;void 0!==i?r.copy(i):e.setFromPoints(t).center(r);for(var o=0,n=0,a=t.length;a>n;n++)o=Math.max(o,r.distanceToSquared(t[n]));return this.radius=Math.sqrt(o),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,o){var n=e.subVectors(o,r).cross(t.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(n,i),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e),r=t||new THREE.Vector3;return r.copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return 0>t&&i>0||0>i&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,i){var r=i||new THREE.Vector3,o=t.delta(e),n=this.normal.dot(o);if(0==n)return 0==this.distanceToPoint(t.start)?r.copy(t.start):void 0;var a=-(t.start.dot(this.normal)+this.constant)/n;return 0>a||a>1?void 0:r.copy(o).multiplyScalar(a).add(t.start)}}(),coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(r,o){var n=o||i.getNormalMatrix(r),a=e.copy(this.normal).applyMatrix3(n),s=this.coplanarPoint(t);return s.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(a,s),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Frustum=function(e,t,i,r,o,n){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==o?o:new THREE.Plane,void 0!==n?n:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,i,r,o,n){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(o),a[5].copy(n),this},copy:function(e){for(var t=this.planes,i=0;6>i;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i=e.elements,r=i[0],o=i[1],n=i[2],a=i[3],s=i[4],l=i[5],h=i[6],u=i[7],c=i[8],f=i[9],d=i[10],p=i[11],m=i[12],E=i[13],g=i[14],v=i[15];return t[0].setComponents(a-r,u-s,p-c,v-m).normalize(),t[1].setComponents(a+r,u+s,p+c,v+m).normalize(),t[2].setComponents(a+o,u+l,p+f,v+E).normalize(),t[3].setComponents(a-o,u-l,p-f,v-E).normalize(),t[4].setComponents(a-n,u-h,p-d,v-g).normalize(),t[5].setComponents(a+n,u+h,p+d,v+g).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var i=t.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),e.copy(i.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,i=e.center,r=-e.radius,o=0;6>o;o++){var n=t[o].distanceToPoint(i);if(r>n)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){for(var r=this.planes,o=0;6>o;o++){var n=r[o];e.x=n.normal.x>0?i.min.x:i.max.x,t.x=n.normal.x>0?i.max.x:i.min.x,e.y=n.normal.y>0?i.min.y:i.max.y,t.y=n.normal.y>0?i.max.y:i.min.y,e.z=n.normal.z>0?i.min.z:i.max.z,t.z=n.normal.z>0?i.max.z:i.min.z;var a=n.distanceToPoint(e),s=n.distanceToPoint(t);if(0>a&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,i=0;6>i;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var i=t||new THREE.Vector3;return i.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return 0>r?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var i=e.subVectors(t,this.origin).dot(this.direction);return 0>i?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(i).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,i,r){var o,n,a,s,l=e.clone().add(t).multiplyScalar(.5),h=t.clone().sub(e).normalize(),u=.5*e.distanceTo(t),c=this.origin.clone().sub(l),f=-this.direction.dot(h),d=c.dot(this.direction),p=-c.dot(h),m=c.lengthSq(),E=Math.abs(1-f*f);if(E>=0)if(o=f*p-d,n=f*d-p,s=u*E,o>=0)if(n>=-s)if(s>=n){var g=1/E;o*=g,n*=g,a=o*(o+f*n+2*d)+n*(f*o+n+2*p)+m}else n=u,o=Math.max(0,-(f*n+d)),a=-o*o+n*(n+2*p)+m;else n=-u,o=Math.max(0,-(f*n+d)),a=-o*o+n*(n+2*p)+m;else-s>=n?(o=Math.max(0,-(-f*u+d)),n=o>0?-u:Math.min(Math.max(-u,-p),u),a=-o*o+n*(n+2*p)+m):s>=n?(o=0,n=Math.min(Math.max(-u,-p),u),a=n*(n+2*p)+m):(o=Math.max(0,-(f*u+d)),n=o>0?u:Math.min(Math.max(-u,-p),u),a=-o*o+n*(n+2*p)+m);else n=f>0?-u:u,o=Math.max(0,-(f*n+d)),a=-o*o+n*(n+2*p)+m;return i&&i.copy(this.direction.clone().multiplyScalar(o).add(this.origin)),r&&r.copy(h.clone().multiplyScalar(n).add(l)),a},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var i=e.normal.dot(this.direction);return 0>i*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return null===i?null:this.at(i,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var i,r,o,n,a,s,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return l>=0?(i=(e.min.x-c.x)*l,r=(e.max.x-c.x)*l):(i=(e.max.x-c.x)*l,r=(e.min.x-c.x)*l),h>=0?(o=(e.min.y-c.y)*h,n=(e.max.y-c.y)*h):(o=(e.max.y-c.y)*h,n=(e.min.y-c.y)*h),i>n||o>r?null:((o>i||i!==i)&&(i=o),(r>n||r!==r)&&(r=n),u>=0?(a=(e.min.z-c.z)*u,s=(e.max.z-c.z)*u):(a=(e.max.z-c.z)*u,s=(e.min.z-c.z)*u),i>s||a>r?null:((a>i||i!==i)&&(i=a),(r>s||r!==r)&&(r=s),0>r?null:this.at(i>=0?i:r,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Vector3;return function(o,n,a,s,l){t.subVectors(n,o),i.subVectors(a,o),r.crossVectors(t,i);var h,u=this.direction.dot(r);if(u>0){if(s)return null;h=1}else{if(!(0>u))return null;h=-1,u=-u}e.subVectors(this.origin,o);var c=h*this.direction.dot(i.crossVectors(e,i));if(0>c)return null;var f=h*this.direction.dot(t.cross(e));if(0>f)return null;if(c+f>u)return null;var d=-h*e.dot(r);return 0>d?null:this.at(d/u,l)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,i,r){this.attributes[e]={itemSize:r,array:new t(i*r)}},applyMatrix:function(e){var t,i;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(i=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==i){var r=(new THREE.Matrix3).getNormalMatrix(e);r.multiplyVector3Array(i),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,i,r,o=this.boundingBox;e.length>=3&&(o.min.x=o.max.x=e[0],o.min.y=o.max.y=e[1],o.min.z=o.max.z=e[2]);for(var n=3,a=e.length;a>n;n+=3)t=e[n],i=e[n+1],r=e[n+2],t<o.min.x?o.min.x=t:t>o.max.x&&(o.max.x=t),i<o.min.y?o.min.y=i:i>o.max.y&&(o.max.y=i),r<o.min.z?o.min.z=r:r>o.max.z&&(o.max.z=r)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){for(var r=this.boundingSphere.center,o=0,n=i.length;n>o;o+=3)t.set(i[o],i[o+1],i[o+2]),e.addPoint(t);e.center(r);for(var a=0,o=0,n=i.length;n>o;o+=3)t.set(i[o],i[o+1],i[o+2]),a=Math.max(a,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,i,r,o=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(o)};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var n,a,s,l,h,u,c=this.attributes.position.array,f=this.attributes.normal.array,d=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,E=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,T=this.offsets;for(i=0,r=T.length;r>i;++i){var _=T[i].start,x=T[i].count,y=T[i].index;for(e=_,t=_+x;t>e;e+=3)n=y+v[e],a=y+v[e+1],s=y+v[e+2],l=c[3*n],h=c[3*n+1],u=c[3*n+2],d.set(l,h,u),l=c[3*a],h=c[3*a+1],u=c[3*a+2],p.set(l,h,u),l=c[3*s],h=c[3*s+1],u=c[3*s+2],m.set(l,h,u),E.subVectors(m,p),g.subVectors(d,p),E.cross(g),f[3*n]+=E.x,f[3*n+1]+=E.y,f[3*n+2]+=E.z,f[3*a]+=E.x,f[3*a+1]+=E.y,f[3*a+2]+=E.z,f[3*s]+=E.x,f[3*s+1]+=E.y,f[3*s+2]+=E.z}}else for(e=0,t=c.length;t>e;e+=9)l=c[e],h=c[e+1],u=c[e+2],d.set(l,h,u),l=c[e+3],h=c[e+4],u=c[e+5],p.set(l,h,u),l=c[e+6],h=c[e+7],u=c[e+8],m.set(l,h,u),E.subVectors(m,p),g.subVectors(d,p),E.cross(g),f[e]=E.x,f[e+1]=E.y,f[e+2]=E.z,f[e+3]=E.x,f[e+4]=E.y,f[e+5]=E.z,f[e+6]=E.x,f[e+7]=E.y,f[e+8]=E.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,i,r,o=this.attributes.normal.array,n=0,a=o.length;a>n;n+=3)e=o[n],t=o[n+1],i=o[n+2],r=1/Math.sqrt(e*e+t*t+i*i),o[n]*=r,o[n+1]*=r,o[n+2]*=r},computeTangents:function(){function e(e,t,i){f=r[3*e],d=r[3*e+1],p=r[3*e+2],m=r[3*t],E=r[3*t+1],g=r[3*t+2],v=r[3*i],T=r[3*i+1],_=r[3*i+2],x=n[2*e],y=n[2*e+1],R=n[2*t],b=n[2*t+1],S=n[2*i],w=n[2*i+1],M=m-f,H=v-f,A=E-d,C=T-d,D=g-p,P=_-p,L=R-x,F=S-x,U=b-y,z=w-y,B=1/(L*z-F*U),j.set((z*M-U*H)*B,(z*A-U*C)*B,(z*D-U*P)*B),X.set((L*H-F*M)*B,(L*C-F*A)*B,(L*P-F*D)*B),h[e].add(j),h[t].add(j),h[i].add(j),u[e].add(X),u[t].add(X),u[i].add(X)}function t(e){it.x=o[3*e],it.y=o[3*e+1],it.z=o[3*e+2],rt.copy(it),$=h[e],et.copy($),et.sub(it.multiplyScalar(it.dot($))).normalize(),tt.crossVectors(rt,$),J=tt.dot(u[e]),Z=0>J?-1:1,l[4*e]=et.x,l[4*e+1]=et.y,l[4*e+2]=et.z,l[4*e+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var i=this.attributes.index.array,r=this.attributes.position.array,o=this.attributes.normal.array,n=this.attributes.uv.array,a=r.length/3;if(void 0===this.attributes.tangent){var s=4*a;this.attributes.tangent={itemSize:4,array:new Float32Array(s)}}for(var l=this.attributes.tangent.array,h=[],u=[],c=0;a>c;c++)h[c]=new THREE.Vector3,u[c]=new THREE.Vector3;var f,d,p,m,E,g,v,T,_,x,y,R,b,S,w,M,H,A,C,D,P,L,F,U,z,B,I,N,O,V,k,G,W,j=new THREE.Vector3,X=new THREE.Vector3,Y=this.offsets;for(O=0,V=Y.length;V>O;++O){var q=Y[O].start,K=Y[O].count,Q=Y[O].index;for(I=q,N=q+K;N>I;I+=3)k=Q+i[I],G=Q+i[I+1],W=Q+i[I+2],e(k,G,W)}var Z,$,J,et=new THREE.Vector3,tt=new THREE.Vector3,it=new THREE.Vector3,rt=new THREE.Vector3;for(O=0,V=Y.length;V>O;++O){var q=Y[O].start,K=Y[O].count,Q=Y[O].index;for(I=q,N=q+K;N>I;I+=3)k=Q+i[I],G=Q+i[I+1],W=Q+i[I+2],t(k),t(G),t(W)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},clone:function(){var e=new THREE.BufferGeometry,t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var i in this.attributes){for(var r=this.attributes[i],o=r.array,n={itemSize:r.itemSize,numItems:r.numItems,array:null},a=0,s=t.length;s>a;a++){var l=t[a];if(o instanceof l){n.array=new l(o);break}}e.attributes[i]=n}for(var a=0,s=this.offsets.length;s>a;a++){var h=this.offsets[a];e.offsets.push({start:h.start,index:h.index,count:h.count})}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;r>i;i++)this.children[i].update(this.skinMatrix,t)},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.Euler=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._order=r||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e,this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e,this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e,this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e,this._updateQuaternion()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._updateQuaternion(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._updateQuaternion(),this},setFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,o=r[0],n=r[4],a=r[8],s=r[1],l=r[5],h=r[9],u=r[2],c=r[6],f=r[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(i(a)),Math.abs(a)<.99999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-n,o)):(this._x=Math.atan2(c,l),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(h)),Math.abs(h)<.99999?(this._y=Math.atan2(a,f),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-u,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(c)),Math.abs(c)<.99999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-n,l)):(this._y=0,this._z=Math.atan2(s,o))):"ZYX"===t?(this._y=Math.asin(-i(u)),Math.abs(u)<.99999?(this._x=Math.atan2(c,f),this._z=Math.atan2(s,o)):(this._x=0,this._z=Math.atan2(-n,l))):"YZX"===t?(this._z=Math.asin(i(s)),Math.abs(s)<.99999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(a,f))):"XZY"===t?(this._z=Math.asin(-i(n)),Math.abs(n)<.99999?(this._x=Math.atan2(c,l),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-h,f),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this._updateQuaternion(),this},setFromQuaternion:function(e,t,i){function r(e){return Math.min(Math.max(e,-1),1)}var o=e.x*e.x,n=e.y*e.y,a=e.z*e.z,s=e.w*e.w;return t=t||this._order,"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-o-n+a),this._y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+o-n-a)):"YXZ"===t?(this._x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-o-n+a),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-o+n-a)):"ZXY"===t?(this._x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-o-n+a),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-o+n-a)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-o-n+a),this._y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+o-n-a)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-o+n-a),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+o-n-a),this._z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-o+n-a),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+o-n-a),this._z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,i!==!1&&this._updateQuaternion(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e.projectionMatrixInverse.copy(this.projectionMatrixInverse),e},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,o,n){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=o,this.height=n,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,i=-t,r=e*i,o=e*t,n=Math.abs(o-r),a=Math.abs(t-i);this.projectionMatrix.makeFrustum(r+this.x*n/this.fullWidth,r+(this.x+this.width)*n/this.fullWidth,t-(this.y+this.height)*a/this.fullHeight,t-this.y*a/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var i=0;i<e.children.length;i++)this.__addObject(e.children[i])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);if(-1!==t&&this.__lights.splice(t,1),e.shadowCascadeArray)for(var i=0;i<e.shadowCascadeArray.length;i++)this.__removeObject(e.shadowCascadeArray[i])}else if(!(e instanceof THREE.Camera)){this.__objectsRemoved.push(e);var t=this.__objectsAdded.indexOf(e);-1!==t&&this.__objectsAdded.splice(t,1)}for(var r=0;r<e.children.length;r++)this.__removeObject(e.children[r])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(e,t,i){if(0===t)this.r=this.g=this.b=i;else{var r=function(e,t,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?e+6*(t-e)*i:.5>i?t:2/3>i?e+6*(t-e)*(2/3-i):e},o=.5>=i?i*(1+t):i+t-i*t,n=2*i-o;this.r=r(n,o,e+1/3),this.g=r(n,o,e),this.b=r(n,o,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)){var t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,i,r=e||{h:0,s:0,l:0},o=this.r,n=this.g,a=this.b,s=Math.max(o,n,a),l=Math.min(o,n,a),h=(l+s)/2;if(l===s)t=0,i=0;else{var u=s-l;switch(i=.5>=h?u/(s+l):u/(2-s-l),s){case o:t=(n-a)/u+(a>n?6:0);break;case n:t=(a-o)/u+2;break;case a:t=(o-n)/u+4}t/=6}return r.h=t,r.s=i,r.l=h,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0
},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.Projector=function(){function e(){if(l===T){var e=new THREE.RenderableObject;return v.push(e),T++,l++,e}return v[l++]}function t(){if(u===x){var e=new THREE.RenderableVertex;return _.push(e),x++,u++,e}return _[u++]}function i(){if(f===R){var e=new THREE.RenderableFace3;return y.push(e),R++,f++,e}return y[f++]}function r(){if(p===S){var e=new THREE.RenderableLine;return b.push(e),S++,p++,e}return b[p++]}function o(){if(E===M){var e=new THREE.RenderableSprite;return w.push(e),M++,E++,e}return w[E++]}function n(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function a(e,t){var i=0,r=1,o=e.z+e.w,n=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return o>=0&&n>=0&&a>=0&&s>=0?!0:0>o&&0>n||0>a&&0>s?!1:(0>o?i=Math.max(i,o/(o-n)):0>n&&(r=Math.min(r,o/(o-n))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),i>r?!1:(e.lerp(t,i),t.lerp(e,1-r),!0))}var s,l,h,u,c,f,d,p,m,E,g,v=[],T=0,_=[],x=0,y=[],R=0,b=[],S=0,w=[],M=0,H={objects:[],sprites:[],lights:[],elements:[]},A=new THREE.Vector3,C=new THREE.Vector4,D=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),P=new THREE.Box3,L=new Array(3),F=(new Array(4),new THREE.Matrix4),U=new THREE.Matrix4,z=new THREE.Matrix4,B=new THREE.Matrix3,I=new THREE.Matrix3,N=new THREE.Vector3,O=new THREE.Frustum,V=new THREE.Vector4,k=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),U.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(U)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),U.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(U)},this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)};var G=function(t){return s=e(),s.id=t.id,s.object=t,null!==t.renderDepth?s.z=t.renderDepth:(A.setFromMatrixPosition(t.matrixWorld),A.applyProjection(U),s.z=A.z),s},W=function(e){if(e.visible!==!1){e instanceof THREE.Light?H.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?(e.frustumCulled===!1||O.intersectsObject(e)===!0)&&H.objects.push(G(e)):e instanceof THREE.Sprite&&H.sprites.push(G(e));for(var t=0,i=e.children.length;i>t;t++)W(e.children[t])}},j=function(e,t){l=0,H.objects.length=0,H.sprites.length=0,H.lights.length=0,W(e),t===!0&&H.objects.sort(n)};this.projectScene=function(e,s,l,v){var T,x,y,R,b,S,w,M,A,G,W,X,Y,q,K,Q,Z,$,J,et,tt,it,rt,ot,nt,at=!1;for(f=0,p=0,E=0,H.elements.length=0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),F.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),U.multiplyMatrices(s.projectionMatrix,F),I.getNormalMatrix(F),O.setFromMatrix(U),j(e,l),T=0,x=H.objects.length;x>T;T++)if(Y=H.objects[T].object,g=Y.matrixWorld,u=0,Y instanceof THREE.Mesh){for(q=Y.geometry,K=q.vertices,Q=q.faces,J=q.faceVertexUvs,B.getNormalMatrix(g),ot=Y.material instanceof THREE.MeshFaceMaterial,nt=ot===!0?Y.material:null,y=0,R=K.length;R>y;y++){h=t(),h.positionWorld.copy(K[y]).applyMatrix4(g),h.positionScreen.copy(h.positionWorld).applyMatrix4(U);var st=1/h.positionScreen.w;h.positionScreen.x*=st,h.positionScreen.y*=st,h.positionScreen.z*=st,h.visible=!(h.positionScreen.x<-1||h.positionScreen.x>1||h.positionScreen.y<-1||h.positionScreen.y>1||h.positionScreen.z<-1||h.positionScreen.z>1)}for(b=0,S=Q.length;S>b;b++){Z=Q[b];var lt=ot===!0?nt.materials[Z.materialIndex]:Y.material;if(void 0!==lt){var ht=lt.side;if(tt=_[Z.a],it=_[Z.b],rt=_[Z.c],L[0]=tt.positionScreen,L[1]=it.positionScreen,L[2]=rt.positionScreen,(tt.visible===!0||it.visible===!0||rt.visible===!0||D.isIntersectionBox(P.setFromPoints(L)))&&(at=(rt.positionScreen.x-tt.positionScreen.x)*(it.positionScreen.y-tt.positionScreen.y)-(rt.positionScreen.y-tt.positionScreen.y)*(it.positionScreen.x-tt.positionScreen.x)<0,ht===THREE.DoubleSide||at===(ht===THREE.FrontSide))){for(c=i(),c.id=Y.id,c.v1.copy(tt),c.v2.copy(it),c.v3.copy(rt),c.normalModel.copy(Z.normal),at!==!1||ht!==THREE.BackSide&&ht!==THREE.DoubleSide||c.normalModel.negate(),c.normalModel.applyMatrix3(B).normalize(),c.normalModelView.copy(c.normalModel).applyMatrix3(I),c.centroidModel.copy(Z.centroid).applyMatrix4(g),$=Z.vertexNormals,w=0,M=Math.min($.length,3);M>w;w++){var ut=c.vertexNormalsModel[w];ut.copy($[w]),at!==!1||ht!==THREE.BackSide&&ht!==THREE.DoubleSide||ut.negate(),ut.applyMatrix3(B).normalize();var ct=c.vertexNormalsModelView[w];ct.copy(ut).applyMatrix3(I)}for(c.vertexNormalsLength=$.length,A=0,G=Math.min(J.length,3);G>A;A++)if(et=J[A][b],void 0!==et)for(W=0,X=et.length;X>W;W++)c.uvs[A][W]=et[W];c.color=Z.color,c.material=lt,N.copy(c.centroidModel).applyProjection(U),c.z=N.z,H.elements.push(c)}}}}else if(Y instanceof THREE.Line){z.multiplyMatrices(U,g),K=Y.geometry.vertices,tt=t(),tt.positionScreen.copy(K[0]).applyMatrix4(z);var ft=Y.type===THREE.LinePieces?2:1;for(y=1,R=K.length;R>y;y++)tt=t(),tt.positionScreen.copy(K[y]).applyMatrix4(z),(y+1)%ft>0||(it=_[u-2],V.copy(tt.positionScreen),k.copy(it.positionScreen),a(V,k)===!0&&(V.multiplyScalar(1/V.w),k.multiplyScalar(1/k.w),d=r(),d.id=Y.id,d.v1.positionScreen.copy(V),d.v2.positionScreen.copy(k),d.z=Math.max(V.z,k.z),d.material=Y.material,Y.material.vertexColors===THREE.VertexColors&&(d.vertexColors[0].copy(Y.geometry.colors[y]),d.vertexColors[1].copy(Y.geometry.colors[y-1])),H.elements.push(d)))}for(T=0,x=H.sprites.length;x>T;T++){Y=H.sprites[T].object,g=Y.matrixWorld,C.set(g.elements[12],g.elements[13],g.elements[14],1),C.applyMatrix4(U);var st=1/C.w;C.z*=st,C.z>=-1&&C.z<=1&&(m=o(),m.id=Y.id,m.x=C.x*st,m.y=C.y*st,m.z=C.z,m.object=Y,m.rotation=Y.rotation,m.scale.x=Y.scale.x*Math.abs(m.x-(C.x+s.projectionMatrix.elements[0])/(C.w+s.projectionMatrix.elements[12])),m.scale.y=Y.scale.y*Math.abs(m.y-(C.y+s.projectionMatrix.elements[5])/(C.w+s.projectionMatrix.elements[13])),m.material=Y.material,H.elements.push(m))}return v===!0&&H.elements.sort(n),H}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0!==i){if(t in this){var r=this[t];r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]="overdraw"==t?Number(i):i}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.CanvasRenderer=function(e){function t(){At.setRGB(0,0,0),Ct.setRGB(0,0,0),Dt.setRGB(0,0,0);for(var e=0,t=b.length;t>e;e++){var i=b[e],r=i.color;i instanceof THREE.AmbientLight?At.add(r):i instanceof THREE.DirectionalLight?Ct.add(r):i instanceof THREE.PointLight&&Dt.add(r)}}function i(e,t,i){for(var r=0,o=b.length;o>r;r++){var n=b[r];if(Rt.copy(n.color),n instanceof THREE.DirectionalLight){var a=Pt.setFromMatrixPosition(n.matrixWorld).normalize(),s=t.dot(a);if(0>=s)continue;s*=n.intensity,i.add(Rt.multiplyScalar(s))}else if(n instanceof THREE.PointLight){var a=Pt.setFromMatrixPosition(n.matrixWorld),s=t.dot(Pt.subVectors(a,e).normalize());if(0>=s)continue;if(s*=0==n.distance?1:1-Math.min(e.distanceTo(a)/n.distance,1),0==s)continue;s*=n.intensity,i.add(Rt.multiplyScalar(s))}}}function r(e,t,i){d(i.opacity),p(i.blending);var r=t.scale.x*it,o=t.scale.y*rt,n=.5*Math.sqrt(r*r+o*o);if(Ht.min.set(e.x-n,e.y-n),Ht.max.set(e.x+n,e.y+n),wt.isIntersectionBox(Ht)===!1)return void Ht.makeEmpty();if(i instanceof THREE.SpriteMaterial||i instanceof THREE.ParticleSystemMaterial)if(null!==i.map){var a=i.map.image;ot.save(),ot.translate(e.x,e.y),ot.rotate(i.rotation),ot.scale(r,-o),ot.drawImage(a,0,0,a.width,a.height,-.5,-.5,1,1),ot.restore()}else T(i.color.getStyle()),ot.save(),ot.translate(e.x,e.y),ot.rotate(i.rotation),ot.scale(r,-o),ot.fillRect(-.5,-.5,1,1),ot.restore();else i instanceof THREE.SpriteCanvasMaterial&&(v(i.color.getStyle()),T(i.color.getStyle()),ot.save(),ot.translate(e.x,e.y),ot.rotate(-t.rotation),ot.scale(r,o),i.program(ot),ot.restore())}function o(e,t,i,r){if(d(r.opacity),p(r.blending),ot.beginPath(),ot.moveTo(e.positionScreen.x,e.positionScreen.y),ot.lineTo(t.positionScreen.x,t.positionScreen.y),r instanceof THREE.LineBasicMaterial){if(m(r.linewidth),E(r.linecap),g(r.linejoin),r.vertexColors!==THREE.VertexColors)v(r.color.getStyle());else{var o=i.vertexColors[0].getStyle(),n=i.vertexColors[1].getStyle();if(o===n)v(o);else{try{var a=ot.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);a.addColorStop(0,o),a.addColorStop(1,n)}catch(s){a=o}v(a)}}ot.stroke(),Ht.expandByScalar(2*r.linewidth)}else r instanceof THREE.LineDashedMaterial&&(m(r.linewidth),E(r.linecap),g(r.linejoin),v(r.color.getStyle()),_(r.dashSize,r.gapSize),ot.stroke(),Ht.expandByScalar(2*r.linewidth),_(null,null))}function n(e,t,r,o,n,f,m,E){if(Z.info.render.vertices+=3,Z.info.render.faces++,d(E.opacity),p(E.blending),A=e.positionScreen.x,C=e.positionScreen.y,D=t.positionScreen.x,P=t.positionScreen.y,L=r.positionScreen.x,F=r.positionScreen.y,a(A,C,D,P,L,F),(E instanceof THREE.MeshLambertMaterial||E instanceof THREE.MeshPhongMaterial)&&null===E.map)xt.copy(E.color),yt.copy(E.emissive),E.vertexColors===THREE.FaceColors&&xt.multiply(m.color),E.wireframe===!1&&E.shading===THREE.SmoothShading&&3===m.vertexNormalsLength?(gt.copy(At),vt.copy(At),Tt.copy(At),i(m.v1.positionWorld,m.vertexNormalsModel[0],gt),i(m.v2.positionWorld,m.vertexNormalsModel[1],vt),i(m.v3.positionWorld,m.vertexNormalsModel[2],Tt),gt.multiply(xt).add(yt),vt.multiply(xt).add(yt),Tt.multiply(xt).add(yt),_t.addColors(vt,Tt).multiplyScalar(.5),B=c(gt,vt,Tt,_t),u(A,C,D,P,L,F,0,0,1,0,0,1,B)):(Et.copy(At),i(m.centroidModel,m.normalModel,Et),Et.multiply(xt).add(yt),E.wireframe===!0?s(Et,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):l(Et));else if(E instanceof THREE.MeshBasicMaterial||E instanceof THREE.MeshLambertMaterial||E instanceof THREE.MeshPhongMaterial)null!==E.map?E.map.mapping instanceof THREE.UVMapping&&(I=m.uvs[0],h(A,C,D,P,L,F,I[o].x,I[o].y,I[n].x,I[n].y,I[f].x,I[f].y,E.map)):null!==E.envMap?E.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Pt.copy(m.vertexNormalsModelView[o]),N=.5*Pt.x+.5,O=.5*Pt.y+.5,Pt.copy(m.vertexNormalsModelView[n]),V=.5*Pt.x+.5,k=.5*Pt.y+.5,Pt.copy(m.vertexNormalsModelView[f]),G=.5*Pt.x+.5,W=.5*Pt.y+.5,h(A,C,D,P,L,F,N,O,V,k,G,W,E.envMap)):(Et.copy(E.color),E.vertexColors===THREE.FaceColors&&Et.multiply(m.color),E.wireframe===!0?s(Et,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):l(Et));else if(E instanceof THREE.MeshDepthMaterial)U=S.near,z=S.far,gt.r=gt.g=gt.b=1-x(e.positionScreen.z*e.positionScreen.w,U,z),vt.r=vt.g=vt.b=1-x(t.positionScreen.z*t.positionScreen.w,U,z),Tt.r=Tt.g=Tt.b=1-x(r.positionScreen.z*r.positionScreen.w,U,z),_t.addColors(vt,Tt).multiplyScalar(.5),B=c(gt,vt,Tt,_t),u(A,C,D,P,L,F,0,0,1,0,0,1,B);else if(E instanceof THREE.MeshNormalMaterial){var g;E.shading===THREE.FlatShading?(g=m.normalModelView,Et.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),E.wireframe===!0?s(Et,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):l(Et)):E.shading===THREE.SmoothShading&&(g=m.vertexNormalsModelView[o],gt.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),g=m.vertexNormalsModelView[n],vt.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),g=m.vertexNormalsModelView[f],Tt.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),_t.addColors(vt,Tt).multiplyScalar(.5),B=c(gt,vt,Tt,_t),u(A,C,D,P,L,F,0,0,1,0,0,1,B))}}function a(e,t,i,r,o,n){ot.beginPath(),ot.moveTo(e,t),ot.lineTo(i,r),ot.lineTo(o,n),ot.closePath()}function s(e,t,i,r){m(t),E(i),g(r),v(e.getStyle()),ot.stroke(),Ht.expandByScalar(2*t)}function l(e){T(e.getStyle()),ot.fill()}function h(e,t,i,r,o,n,a,s,h,u,c,f,d){if(!(d instanceof THREE.DataTexture||void 0===d.image||0===d.image.width)){if(d.needsUpdate===!0){var p=d.wrapS===THREE.RepeatWrapping,m=d.wrapT===THREE.RepeatWrapping;bt[d.id]=ot.createPattern(d.image,p===!0&&m===!0?"repeat":p===!0&&m===!1?"repeat-x":p===!1&&m===!0?"repeat-y":"no-repeat"),d.needsUpdate=!1}T(void 0===bt[d.id]?"rgba(0,0,0,1)":bt[d.id]);var E,g,v,_,x,y,R,b,S=d.offset.x/d.repeat.x,w=d.offset.y/d.repeat.y,M=d.image.width*d.repeat.x,H=d.image.height*d.repeat.y;if(a=(a+S)*M,s=(1-s+w)*H,h=(h+S)*M,u=(1-u+w)*H,c=(c+S)*M,f=(1-f+w)*H,i-=e,r-=t,o-=e,n-=t,h-=a,u-=s,c-=a,f-=s,R=h*f-c*u,0===R){if(void 0===St[d.id]){var A=document.createElement("canvas");A.width=d.image.width,A.height=d.image.height;var C=A.getContext("2d");C.drawImage(d.image,0,0),St[d.id]=C.getImageData(0,0,d.image.width,d.image.height).data}var D=St[d.id],P=4*(Math.floor(a)+Math.floor(s)*d.image.width);return Et.setRGB(D[P]/255,D[P+1]/255,D[P+2]/255),void l(Et)}b=1/R,E=(f*i-u*o)*b,g=(f*r-u*n)*b,v=(h*o-c*i)*b,_=(h*n-c*r)*b,x=e-E*a-v*s,y=t-g*a-_*s,ot.save(),ot.transform(E,g,v,_,x,y),ot.fill(),ot.restore()}}function u(e,t,i,r,o,n,a,s,l,h,u,c,f){var d,p,m,E,g,v,T,_,x=f.width-1,y=f.height-1;a*=x,s*=y,l*=x,h*=y,u*=x,c*=y,i-=e,r-=t,o-=e,n-=t,l-=a,h-=s,u-=a,c-=s,T=l*c-u*h,_=1/T,d=(c*i-h*o)*_,p=(c*r-h*n)*_,m=(l*o-u*i)*_,E=(l*n-u*r)*_,g=e-d*a-m*s,v=t-p*a-E*s,ot.save(),ot.transform(d,p,m,E,g,v),ot.clip(),ot.drawImage(f,0,0),ot.restore()}function c(e,t,i,r){return q[0]=255*e.r|0,q[1]=255*e.g|0,q[2]=255*e.b|0,q[4]=255*t.r|0,q[5]=255*t.g|0,q[6]=255*t.b|0,q[8]=255*i.r|0,q[9]=255*i.g|0,q[10]=255*i.b|0,q[12]=255*r.r|0,q[13]=255*r.g|0,q[14]=255*r.b|0,X.putImageData(Y,0,0),Q.drawImage(j,0,0),K}function f(e,t,i){var r,o=t.x-e.x,n=t.y-e.y,a=o*o+n*n;0!==a&&(r=i/Math.sqrt(a),o*=r,n*=r,t.x+=o,t.y+=n,e.x-=o,e.y-=n)}function d(e){st!==e&&(ot.globalAlpha=e,st=e)}function p(e){lt!==e&&(e===THREE.NormalBlending?ot.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?ot.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(ot.globalCompositeOperation="darker"),lt=e)}function m(e){ct!==e&&(ot.lineWidth=e,ct=e)}function E(e){ft!==e&&(ot.lineCap=e,ft=e)}function g(e){dt!==e&&(ot.lineJoin=e,dt=e)}function v(e){ht!==e&&(ot.strokeStyle=e,ht=e)}function T(e){ut!==e&&(ot.fillStyle=e,ut=e)}function _(e,t){(pt!==e||mt!==t)&&(ot.setLineDash([e,t]),pt=e,mt=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var x=THREE.Math.smoothstep;e=e||{};var y,R,b,S,w,M,H,A,C,D,P,L,F,U,z,B,I,N,O,V,k,G,W,j,X,Y,q,K,Q,Z=this,$=new THREE.Projector,J=void 0!==e.canvas?e.canvas:document.createElement("canvas"),et=J.width,tt=J.height,it=Math.floor(et/2),rt=Math.floor(tt/2),ot=J.getContext("2d"),nt=new THREE.Color(0),at=0,st=1,lt=0,ht=null,ut=null,ct=null,ft=null,dt=null,pt=null,mt=0,Et=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),gt=new THREE.Color,vt=new THREE.Color,Tt=new THREE.Color,_t=new THREE.Color,xt=new THREE.Color,yt=new THREE.Color,Rt=new THREE.Color,bt={},St={},wt=new THREE.Box2,Mt=new THREE.Box2,Ht=new THREE.Box2,At=new THREE.Color,Ct=new THREE.Color,Dt=new THREE.Color,Pt=new THREE.Vector3,Lt=16;j=document.createElement("canvas"),j.width=j.height=2,X=j.getContext("2d"),X.fillStyle="rgba(0,0,0,1)",X.fillRect(0,0,2,2),Y=X.getImageData(0,0,2,2),q=Y.data,K=document.createElement("canvas"),K.width=K.height=Lt,Q=K.getContext("2d"),Q.translate(-Lt/2,-Lt/2),Q.scale(Lt,Lt),Lt--,void 0===ot.setLineDash&&(ot.setLineDash=void 0!==ot.mozDash?function(e){ot.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=J,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,i){et=e*this.devicePixelRatio,tt=t*this.devicePixelRatio,it=Math.floor(et/2),rt=Math.floor(tt/2),J.width=et,J.height=tt,1!==this.devicePixelRatio&&i!==!1&&(J.style.width=e+"px",J.style.height=t+"px"),wt.set(new THREE.Vector2(-it,-rt),new THREE.Vector2(it,rt)),Mt.set(new THREE.Vector2(-it,-rt),new THREE.Vector2(it,rt)),st=1,lt=0,ht=null,ut=null,ct=null,ft=null,dt=null},this.setClearColor=function(e,t){nt.set(e),at=void 0!==t?t:1,Mt.set(new THREE.Vector2(-it,-rt),new THREE.Vector2(it,rt))},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){ot.setTransform(1,0,0,-1,it,rt),Mt.empty()===!1&&(Mt.intersect(wt),Mt.expandByScalar(2),1>at&&ot.clearRect(0|Mt.min.x,0|Mt.min.y,Mt.max.x-Mt.min.x|0,Mt.max.y-Mt.min.y|0),at>0&&(p(THREE.NormalBlending),d(1),T("rgba("+Math.floor(255*nt.r)+","+Math.floor(255*nt.g)+","+Math.floor(255*nt.b)+","+at+")"),ot.fillRect(0|Mt.min.x,0|Mt.min.y,Mt.max.x-Mt.min.x|0,Mt.max.y-Mt.min.y|0)),Mt.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,i){if(i instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),ot.setTransform(1,0,0,-1,it,rt),Z.info.render.vertices=0,Z.info.render.faces=0,y=$.projectScene(e,i,this.sortObjects,this.sortElements),R=y.elements,b=y.lights,S=i,t();for(var a=0,s=R.length;s>a;a++){var l=R[a],h=l.material;if(void 0!==h&&h.visible!==!1){if(Ht.makeEmpty(),l instanceof THREE.RenderableSprite)w=l,w.x*=it,w.y*=rt,r(w,l,h);else if(l instanceof THREE.RenderableLine)w=l.v1,M=l.v2,w.positionScreen.x*=it,w.positionScreen.y*=rt,M.positionScreen.x*=it,M.positionScreen.y*=rt,Ht.setFromPoints([w.positionScreen,M.positionScreen]),wt.isIntersectionBox(Ht)===!0&&o(w,M,l,h);else if(l instanceof THREE.RenderableFace3){if(w=l.v1,M=l.v2,H=l.v3,w.positionScreen.z<-1||w.positionScreen.z>1)continue;if(M.positionScreen.z<-1||M.positionScreen.z>1)continue;if(H.positionScreen.z<-1||H.positionScreen.z>1)continue;w.positionScreen.x*=it,w.positionScreen.y*=rt,M.positionScreen.x*=it,M.positionScreen.y*=rt,H.positionScreen.x*=it,H.positionScreen.y*=rt,h.overdraw>0&&(f(w.positionScreen,M.positionScreen,h.overdraw),f(M.positionScreen,H.positionScreen,h.overdraw),f(H.positionScreen,w.positionScreen,h.overdraw)),Ht.setFromPoints([w.positionScreen,M.positionScreen,H.positionScreen]),wt.isIntersectionBox(Ht)===!0&&n(w,M,H,0,1,2,l,h)}Mt.union(Ht)}}ot.setTransform(1,0,0,1,0,0)}},THREE.DataTexture=function(e,t,i,r,o,n,a,s,l,h,u){THREE.Texture.call(this,null,n,a,s,l,h,r,o,u),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.LensFlare=function(e,t,i,r,o){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,o)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,i,r,o,n){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===n&&(n=1),void 0===o&&(o=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:n,color:o,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,o=2*-this.positionScreen.y;for(e=0;i>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+o*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.SkinnedMesh=function(e,t,i){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==i?i:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r,o,n,a,s,l;if(this.geometry&&void 0!==this.geometry.bones){for(r=0;r<this.geometry.bones.length;r++)n=this.geometry.bones[r],a=n.pos,s=n.rotq,l=n.scl,o=this.addBone(),o.name=n.name,o.position.set(a[0],a[1],a[2]),o.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==l?o.scale.set(l[0],l[1],l[2]):o.scale.set(1,1,1);for(r=0;r<this.bones.length;r++)n=this.geometry.bones[r],o=this.bones[r],-1===n.parent?this.add(o):this.bones[n.parent].add(o);var h=this.bones.length;if(this.useVertexTexture){var u;u=h>256?64:h>64?32:h>16?16:8,this.boneTextureWidth=u,this.boneTextureHeight=u,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*h);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var i=0,r=this.children.length;r>i;i++){var o=this.children[i];o instanceof THREE.Bone?o.update(this.identityMatrix,!1):o.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var n=0,a=this.bones.length;a>n;n++){var s=new THREE.Matrix4;s.getInverse(this.bones[n].skinMatrix),this.boneInverses.push(s)}}for(var n=0,a=this.bones.length;a>n;n++)e.multiplyMatrices(this.bones[n].skinMatrix,this.boneInverses[n]),e.flattenToArrayOffset(this.boneMatrices,16*n);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!==i?t.multiplyScalar(i):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","uniform int boneTextureWidth;","uniform int boneTextureHeight;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, float( boneTextureWidth ) );","float y = floor( j / float( boneTextureWidth ) );","float dx = 1.0 / float( boneTextureWidth );","float dy = 1.0 / float( boneTextureHeight );","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.UniformsUtils={merge:function(e){var t,i,r,o={};
for(t=0;t<e.length;t++){r=this.clone(e[t]);for(i in r)o[i]=r[i]}return o},clone:function(e){var t,i,r,o={};for(t in e){o[t]={};for(i in e[t])r=e[t][i],o[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r}return o}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.SpritePlugin=function(){function e(){var e=i.createProgram(),t=i.createShader(i.VERTEX_SHADER),o=i.createShader(i.FRAGMENT_SHADER);return i.shaderSource(t,["precision "+r.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),i.shaderSource(o,["precision "+r.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),i.compileShader(t),i.compileShader(o),i.attachShader(e,t),i.attachShader(e,o),i.linkProgram(e),e}function t(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var i,r,o,n,a,s,l,h,u,c;this.init=function(t){i=t.context,r=t,n=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),a=new Uint16Array([0,1,2,0,2,3]),s=i.createBuffer(),l=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,s),i.bufferData(i.ARRAY_BUFFER,n,i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,l),i.bufferData(i.ELEMENT_ARRAY_BUFFER,a,i.STATIC_DRAW),h=e(),u={position:i.getAttribLocation(h,"position"),uv:i.getAttribLocation(h,"uv")},c={uvOffset:i.getUniformLocation(h,"uvOffset"),uvScale:i.getUniformLocation(h,"uvScale"),rotation:i.getUniformLocation(h,"rotation"),scale:i.getUniformLocation(h,"scale"),color:i.getUniformLocation(h,"color"),map:i.getUniformLocation(h,"map"),opacity:i.getUniformLocation(h,"opacity"),modelViewMatrix:i.getUniformLocation(h,"modelViewMatrix"),projectionMatrix:i.getUniformLocation(h,"projectionMatrix"),fogType:i.getUniformLocation(h,"fogType"),fogDensity:i.getUniformLocation(h,"fogDensity"),fogNear:i.getUniformLocation(h,"fogNear"),fogFar:i.getUniformLocation(h,"fogFar"),fogColor:i.getUniformLocation(h,"fogColor"),alphaTest:i.getUniformLocation(h,"alphaTest")};var f=document.createElement("canvas");f.width=8,f.height=8;var d=f.getContext("2d");d.fillStyle="#ffffff",d.fillRect(0,0,f.width,f.height),o=new THREE.Texture(f),o.needsUpdate=!0},this.render=function(e,n){var a=e.__webglSprites,f=a.length;if(f){i.useProgram(h),i.enableVertexAttribArray(u.position),i.enableVertexAttribArray(u.uv),i.disable(i.CULL_FACE),i.enable(i.BLEND),i.bindBuffer(i.ARRAY_BUFFER,s),i.vertexAttribPointer(u.position,2,i.FLOAT,!1,16,0),i.vertexAttribPointer(u.uv,2,i.FLOAT,!1,16,8),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,l),i.uniformMatrix4fv(c.projectionMatrix,!1,n.projectionMatrix.elements),i.activeTexture(i.TEXTURE0),i.uniform1i(c.map,0);var d=0,p=0,m=e.fog;m?(i.uniform3f(c.fogColor,m.color.r,m.color.g,m.color.b),m instanceof THREE.Fog?(i.uniform1f(c.fogNear,m.near),i.uniform1f(c.fogFar,m.far),i.uniform1i(c.fogType,1),d=1,p=1):m instanceof THREE.FogExp2&&(i.uniform1f(c.fogDensity,m.density),i.uniform1i(c.fogType,2),d=2,p=2)):(i.uniform1i(c.fogType,0),d=0,p=0);var E,g,v,T,_=[];for(E=0;f>E;E++)g=a[E],v=g.material,g.visible!==!1&&(g._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,g.matrixWorld),g.z=-g._modelViewMatrix.elements[14]);for(a.sort(t),E=0;f>E;E++)g=a[E],g.visible!==!1&&(v=g.material,i.uniform1f(c.alphaTest,v.alphaTest),i.uniformMatrix4fv(c.modelViewMatrix,!1,g._modelViewMatrix.elements),_[0]=g.scale.x,_[1]=g.scale.y,T=e.fog&&v.fog?p:0,d!==T&&(i.uniform1i(c.fogType,T),d=T),i.uniform2f(c.uvScale,v.uvScale.x,v.uvScale.y),i.uniform2f(c.uvOffset,v.uvOffset.x,v.uvOffset.y),i.uniform1f(c.opacity,v.opacity),i.uniform3f(c.color,v.color.r,v.color.g,v.color.b),i.uniform1f(c.rotation,v.rotation),i.uniform2fv(c.scale,_),r.setBlending(v.blending,v.blendEquation,v.blendSrc,v.blendDst),r.setDepthTest(v.depthTest),r.setDepthWrite(v.depthWrite),v.map&&v.map.image&&v.map.image.width?r.setTexture(v.map,0):r.setTexture(o,0),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0));i.enable(i.CULL_FACE)}}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.WebGLRenderTarget=function(e,t,i){this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null
},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.LensFlarePlugin=function(){function e(e,i){var r=t.createProgram(),o=t.createShader(t.FRAGMENT_SHADER),n=t.createShader(t.VERTEX_SHADER),a="precision "+i+" float;\n";return t.shaderSource(o,a+e.fragmentShader),t.shaderSource(n,a+e.vertexShader),t.compileShader(o),t.compileShader(n),t.attachShader(r,o),t.attachShader(r,n),t.linkProgram(r),r}var t,i,r,o={};this.init=function(n){t=n.context,i=n,r=n.getPrecision(),o.vertices=new Float32Array(16),o.faces=new Uint16Array(6);var a=0;o.vertices[a++]=-1,o.vertices[a++]=-1,o.vertices[a++]=0,o.vertices[a++]=0,o.vertices[a++]=1,o.vertices[a++]=-1,o.vertices[a++]=1,o.vertices[a++]=0,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=-1,o.vertices[a++]=1,o.vertices[a++]=0,o.vertices[a++]=1,a=0,o.faces[a++]=0,o.faces[a++]=1,o.faces[a++]=2,o.faces[a++]=0,o.faces[a++]=2,o.faces[a++]=3,o.vertexBuffer=t.createBuffer(),o.elementBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,o.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,o.vertices,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.elementBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o.faces,t.STATIC_DRAW),o.tempTexture=t.createTexture(),o.occlusionTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,o.tempTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,o.occlusionTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(o.hasVertexTexture=!1,o.program=e(THREE.ShaderFlares.lensFlare,r)):(o.hasVertexTexture=!0,o.program=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),o.attributes={},o.uniforms={},o.attributes.vertex=t.getAttribLocation(o.program,"position"),o.attributes.uv=t.getAttribLocation(o.program,"uv"),o.uniforms.renderType=t.getUniformLocation(o.program,"renderType"),o.uniforms.map=t.getUniformLocation(o.program,"map"),o.uniforms.occlusionMap=t.getUniformLocation(o.program,"occlusionMap"),o.uniforms.opacity=t.getUniformLocation(o.program,"opacity"),o.uniforms.color=t.getUniformLocation(o.program,"color"),o.uniforms.scale=t.getUniformLocation(o.program,"scale"),o.uniforms.rotation=t.getUniformLocation(o.program,"rotation"),o.uniforms.screenPosition=t.getUniformLocation(o.program,"screenPosition")},this.render=function(e,r,n,a){var s=e.__webglFlares,l=s.length;if(l){var h=new THREE.Vector3,u=a/n,c=.5*n,f=.5*a,d=16/a,p=new THREE.Vector2(d*u,d),m=new THREE.Vector3(1,1,0),E=new THREE.Vector2(1,1),g=o.uniforms,v=o.attributes;t.useProgram(o.program),t.enableVertexAttribArray(o.attributes.vertex),t.enableVertexAttribArray(o.attributes.uv),t.uniform1i(g.occlusionMap,0),t.uniform1i(g.map,1),t.bindBuffer(t.ARRAY_BUFFER,o.vertexBuffer),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.elementBuffer),t.disable(t.CULL_FACE),t.depthMask(!1);var T,_,x,y,R;for(T=0;l>T;T++)if(d=16/a,p.set(d*u,d),y=s[T],h.set(y.matrixWorld.elements[12],y.matrixWorld.elements[13],y.matrixWorld.elements[14]),h.applyMatrix4(r.matrixWorldInverse),h.applyProjection(r.projectionMatrix),m.copy(h),E.x=m.x*c+c,E.y=m.y*f+f,o.hasVertexTexture||E.x>0&&E.x<n&&E.y>0&&E.y<a)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,o.tempTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,E.x-8,E.y-8,16,16,0),t.uniform1i(g.renderType,0),t.uniform2f(g.scale,p.x,p.y),t.uniform3f(g.screenPosition,m.x,m.y,m.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,o.occlusionTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,E.x-8,E.y-8,16,16,0),t.uniform1i(g.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,o.tempTexture),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),y.positionScreen.copy(m),y.customUpdateCallback?y.customUpdateCallback(y):y.updateLensFlares(),t.uniform1i(g.renderType,2),t.enable(t.BLEND),_=0,x=y.lensFlares.length;x>_;_++)R=y.lensFlares[_],R.opacity>.001&&R.scale>.001&&(m.x=R.x,m.y=R.y,m.z=R.z,d=R.size*R.scale/a,p.x=d*u,p.y=d,t.uniform3f(g.screenPosition,m.x,m.y,m.z),t.uniform2f(g.scale,p.x,p.y),t.uniform1f(g.rotation,R.rotation),t.uniform1f(g.opacity,R.opacity),t.uniform3f(g.color,R.color.r,R.color.g,R.color.b),i.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),i.setTexture(R.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function e(e,t){var i=new THREE.DirectionalLight;i.isVirtual=!0,i.onlyShadow=!0,i.castShadow=!0,i.shadowCameraNear=e.shadowCameraNear,i.shadowCameraFar=e.shadowCameraFar,i.shadowCameraLeft=e.shadowCameraLeft,i.shadowCameraRight=e.shadowCameraRight,i.shadowCameraBottom=e.shadowCameraBottom,i.shadowCameraTop=e.shadowCameraTop,i.shadowCameraVisible=e.shadowCameraVisible,i.shadowDarkness=e.shadowDarkness,i.shadowBias=e.shadowCascadeBias[t],i.shadowMapWidth=e.shadowCascadeWidth[t],i.shadowMapHeight=e.shadowCascadeHeight[t],i.pointsWorld=[],i.pointsFrustum=[];for(var r=i.pointsWorld,o=i.pointsFrustum,n=0;8>n;n++)r[n]=new THREE.Vector3,o[n]=new THREE.Vector3;var a=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return o[0].set(-1,-1,a),o[1].set(1,-1,a),o[2].set(-1,1,a),o[3].set(1,1,a),o[4].set(-1,-1,s),o[5].set(1,-1,s),o[6].set(-1,1,s),o[7].set(1,1,s),i}function t(e,t){var i=e.shadowCascadeArray[t];i.position.copy(e.position),i.target.position.copy(e.target.position),i.lookAt(i.target),i.shadowCameraVisible=e.shadowCameraVisible,i.shadowDarkness=e.shadowDarkness,i.shadowBias=e.shadowCascadeBias[t];var r=e.shadowCascadeNearZ[t],o=e.shadowCascadeFarZ[t],n=i.pointsFrustum;n[0].z=r,n[1].z=r,n[2].z=r,n[3].z=r,n[4].z=o,n[5].z=o,n[6].z=o,n[7].z=o}function i(e,t){var i=t.shadowCamera,r=t.pointsFrustum,o=t.pointsWorld;f.set(1/0,1/0,1/0),d.set(-1/0,-1/0,-1/0);for(var n=0;8>n;n++){var a=o[n];a.copy(r[n]),THREE.ShadowMapPlugin.__projector.unprojectVector(a,e),a.applyMatrix4(i.matrixWorldInverse),a.x<f.x&&(f.x=a.x),a.x>d.x&&(d.x=a.x),a.y<f.y&&(f.y=a.y),a.y>d.y&&(d.y=a.y),a.z<f.z&&(f.z=a.z),a.z>d.z&&(d.z=a.z)}i.left=f.x,i.right=d.x,i.top=d.y,i.bottom=f.y,i.updateProjectionMatrix()}function r(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}var o,n,a,s,l,h,u=new THREE.Frustum,c=new THREE.Matrix4,f=new THREE.Vector3,d=new THREE.Vector3,p=new THREE.Vector3;this.init=function(e){o=e.context,n=e;var t=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(t.uniforms);a=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:i}),s=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:i,morphTargets:!0}),l=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:i,skinning:!0}),h=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:i,morphTargets:!0,skinning:!0}),a._shadowPass=!0,s._shadowPass=!0,l._shadowPass=!0,h._shadowPass=!0},this.render=function(e,t){n.shadowMapEnabled&&n.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(f,d){var m,E,g,v,T,_,x,y,R,b,S,w,M,H,A=[],C=0,D=null;for(o.clearColor(1,1,1,1),o.disable(o.BLEND),o.enable(o.CULL_FACE),o.frontFace(o.CCW),o.cullFace(n.shadowMapCullFace===THREE.CullFaceFront?o.FRONT:o.BACK),n.setDepthTest(!0),m=0,E=f.__lights.length;E>m;m++)if(M=f.__lights[m],M.castShadow)if(M instanceof THREE.DirectionalLight&&M.shadowCascade)for(T=0;T<M.shadowCascadeCount;T++){var P;if(M.shadowCascadeArray[T])P=M.shadowCascadeArray[T];else{P=e(M,T),P.originalCamera=d;var L=new THREE.Gyroscope;L.position=M.shadowCascadeOffset,L.add(P),L.add(P.target),d.add(L),M.shadowCascadeArray[T]=P,console.log("Created virtualLight",P)}t(M,T),A[C]=P,C++}else A[C]=M,C++;for(m=0,E=A.length;E>m;m++){if(M=A[m],!M.shadowMap){var F=THREE.LinearFilter;n.shadowMapType===THREE.PCFSoftShadowMap&&(F=THREE.NearestFilter);var U={minFilter:F,magFilter:F,format:THREE.RGBAFormat};M.shadowMap=new THREE.WebGLRenderTarget(M.shadowMapWidth,M.shadowMapHeight,U),M.shadowMapSize=new THREE.Vector2(M.shadowMapWidth,M.shadowMapHeight),M.shadowMatrix=new THREE.Matrix4}if(!M.shadowCamera){if(M instanceof THREE.SpotLight)M.shadowCamera=new THREE.PerspectiveCamera(M.shadowCameraFov,M.shadowMapWidth/M.shadowMapHeight,M.shadowCameraNear,M.shadowCameraFar);else{if(!(M instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}M.shadowCamera=new THREE.OrthographicCamera(M.shadowCameraLeft,M.shadowCameraRight,M.shadowCameraTop,M.shadowCameraBottom,M.shadowCameraNear,M.shadowCameraFar)}f.add(M.shadowCamera),f.autoUpdate===!0&&f.updateMatrixWorld()}for(M.shadowCameraVisible&&!M.cameraHelper&&(M.cameraHelper=new THREE.CameraHelper(M.shadowCamera),M.shadowCamera.add(M.cameraHelper)),M.isVirtual&&P.originalCamera==d&&i(d,M),_=M.shadowMap,x=M.shadowMatrix,y=M.shadowCamera,y.position.setFromMatrixPosition(M.matrixWorld),p.setFromMatrixPosition(M.target.matrixWorld),y.lookAt(p),y.updateMatrixWorld(),y.matrixWorldInverse.getInverse(y.matrixWorld),M.cameraHelper&&(M.cameraHelper.visible=M.shadowCameraVisible),M.shadowCameraVisible&&M.cameraHelper.update(),x.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),x.multiply(y.projectionMatrix),x.multiply(y.matrixWorldInverse),c.multiplyMatrices(y.projectionMatrix,y.matrixWorldInverse),u.setFromMatrix(c),n.setRenderTarget(_),n.clear(),H=f.__webglObjects,g=0,v=H.length;v>g;g++)S=H[g],w=S.object,S.render=!1,w.visible&&w.castShadow&&((w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)&&w.frustumCulled&&!u.intersectsObject(w)||(w._modelViewMatrix.multiplyMatrices(y.matrixWorldInverse,w.matrixWorld),S.render=!0));var z,B,I;for(g=0,v=H.length;v>g;g++)S=H[g],S.render&&(w=S.object,R=S.buffer,z=r(w),B=w.geometry.morphTargets.length>0&&z.morphTargets,I=w instanceof THREE.SkinnedMesh&&z.skinning,b=w.customDepthMaterial?w.customDepthMaterial:I?B?h:l:B?s:a,R instanceof THREE.BufferGeometry?n.renderBufferDirect(y,f.__lights,D,b,R,w):n.renderBuffer(y,f.__lights,D,b,R,w));for(H=f.__webglObjectsImmediate,g=0,v=H.length;v>g;g++)S=H[g],w=S.object,w.visible&&w.castShadow&&(w._modelViewMatrix.multiplyMatrices(y.matrixWorldInverse,w.matrixWorld),n.renderImmediateObject(y,f.__lights,D,a,w))}var N=n.getClearColor(),O=n.getClearAlpha();o.clearColor(N.r,N.g,N.b,O),o.enable(o.BLEND),n.shadowMapCullFace===THREE.CullFaceFront&&o.cullFace(o.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=Ft.createBuffer(),e.__webglColorBuffer=Ft.createBuffer(),Ot.info.memory.geometries++}function i(e){e.__webglVertexBuffer=Ft.createBuffer(),e.__webglColorBuffer=Ft.createBuffer(),e.__webglLineDistanceBuffer=Ft.createBuffer(),Ot.info.memory.geometries++}function r(e){e.__webglVertexBuffer=Ft.createBuffer(),e.__webglNormalBuffer=Ft.createBuffer(),e.__webglTangentBuffer=Ft.createBuffer(),e.__webglColorBuffer=Ft.createBuffer(),e.__webglUVBuffer=Ft.createBuffer(),e.__webglUV2Buffer=Ft.createBuffer(),e.__webglSkinIndicesBuffer=Ft.createBuffer(),e.__webglSkinWeightsBuffer=Ft.createBuffer(),e.__webglFaceBuffer=Ft.createBuffer(),e.__webglLineBuffer=Ft.createBuffer();var t,i;if(e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,i=e.numMorphTargets;i>t;t++)e.__webglMorphTargetsBuffers.push(Ft.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,i=e.numMorphNormals;i>t;t++)e.__webglMorphNormalsBuffers.push(Ft.createBuffer());Ot.info.memory.geometries++}function o(e,t){var i=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var o in r.attributes){var n=r.attributes[o];if(!n.__webglInitialized||n.createUniqueBuffers){n.__webglInitialized=!0;var a=1;"v2"===n.type?a=2:"v3"===n.type?a=3:"v4"===n.type?a=4:"c"===n.type&&(a=3),n.size=a,n.array=new Float32Array(i*a),n.buffer=Ft.createBuffer(),n.buffer.belongsToAttribute=o,n.needsUpdate=!0}e.__webglCustomAttributesList.push(n)}}}function n(e,t){var i=e.vertices.length;e.__vertexArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__sortArray=[],e.__webglParticleCount=i,o(e,t)}function a(e,t){var i=e.vertices.length;e.__vertexArray=new Float32Array(3*i),e.__colorArray=new Float32Array(3*i),e.__lineDistanceArray=new Float32Array(1*i),e.__webglLineCount=i,o(e,t)}function s(e,t){var i=t.geometry,r=e.faces3,o=3*r.length,n=1*r.length,a=3*r.length,s=l(t,e),h=f(s),d=u(s),p=c(s);e.__vertexArray=new Float32Array(3*o),d&&(e.__normalArray=new Float32Array(3*o)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*o)),p&&(e.__colorArray=new Float32Array(3*o)),h&&(i.faceVertexUvs.length>0&&(e.__uvArray=new Float32Array(2*o)),i.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*o))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*o),e.__skinWeightArray=new Float32Array(4*o)),e.__faceArray=new Uint16Array(3*n),e.__lineArray=new Uint16Array(2*a);var m,E;if(e.numMorphTargets)for(e.__morphTargetsArrays=[],m=0,E=e.numMorphTargets;E>m;m++)e.__morphTargetsArrays.push(new Float32Array(3*o));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],m=0,E=e.numMorphNormals;E>m;m++)e.__morphNormalsArrays.push(new Float32Array(3*o));if(e.__webglFaceCount=3*n,e.__webglLineCount=2*a,s.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var g in s.attributes){var v=s.attributes[g],T={};for(var _ in v)T[_]=v[_];if(!T.__webglInitialized||T.createUniqueBuffers){T.__webglInitialized=!0;var x=1;"v2"===T.type?x=2:"v3"===T.type?x=3:"v4"===T.type?x=4:"c"===T.type&&(x=3),T.size=x,T.array=new Float32Array(o*x),T.buffer=Ft.createBuffer(),T.buffer.belongsToAttribute=g,v.needsUpdate=!0,T.__original=v}e.__webglCustomAttributesList.push(T)}}e.__inittedArrays=!0}function l(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function h(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}function u(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:h(e)?THREE.SmoothShading:THREE.FlatShading}function c(e){return e.vertexColors?e.vertexColors:!1}function f(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function d(e){var t,i,r;for(t in e.attributes)r="index"===t?Ft.ELEMENT_ARRAY_BUFFER:Ft.ARRAY_BUFFER,i=e.attributes[t],void 0===i.numItems&&(i.numItems=i.array.length),i.buffer=Ft.createBuffer(),Ft.bindBuffer(r,i.buffer),Ft.bufferData(r,i.array,Ft.STATIC_DRAW)}function p(e,t,i){var r,o,n,a,s,l,h,u,c,f,d,p,m=e.vertices,E=m.length,g=e.colors,v=g.length,T=e.__vertexArray,_=e.__colorArray,x=e.__sortArray,R=e.verticesNeedUpdate,b=(e.elementsNeedUpdate,e.colorsNeedUpdate),S=e.__webglCustomAttributesList;if(i.sortParticles){for(gi.copy(Ei),gi.multiply(i.matrixWorld),r=0;E>r;r++)n=m[r],vi.copy(n),vi.applyProjection(gi),x[r]=[vi.z,r];for(x.sort(y),r=0;E>r;r++)n=m[x[r][1]],a=3*r,T[a]=n.x,T[a+1]=n.y,T[a+2]=n.z;for(o=0;v>o;o++)a=3*o,l=g[x[o][1]],_[a]=l.r,_[a+1]=l.g,_[a+2]=l.b;if(S)for(h=0,u=S.length;u>h;h++)if(p=S[h],void 0===p.boundTo||"vertices"===p.boundTo)if(a=0,f=p.value.length,1===p.size)for(c=0;f>c;c++)s=x[c][1],p.array[c]=p.value[s];else if(2===p.size)for(c=0;f>c;c++)s=x[c][1],d=p.value[s],p.array[a]=d.x,p.array[a+1]=d.y,a+=2;else if(3===p.size)if("c"===p.type)for(c=0;f>c;c++)s=x[c][1],d=p.value[s],p.array[a]=d.r,p.array[a+1]=d.g,p.array[a+2]=d.b,a+=3;else for(c=0;f>c;c++)s=x[c][1],d=p.value[s],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,a+=3;else if(4===p.size)for(c=0;f>c;c++)s=x[c][1],d=p.value[s],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,p.array[a+3]=d.w,a+=4}else{if(R)for(r=0;E>r;r++)n=m[r],a=3*r,T[a]=n.x,T[a+1]=n.y,T[a+2]=n.z;if(b)for(o=0;v>o;o++)l=g[o],a=3*o,_[a]=l.r,_[a+1]=l.g,_[a+2]=l.b;if(S)for(h=0,u=S.length;u>h;h++)if(p=S[h],p.needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo))if(f=p.value.length,a=0,1===p.size)for(c=0;f>c;c++)p.array[c]=p.value[c];else if(2===p.size)for(c=0;f>c;c++)d=p.value[c],p.array[a]=d.x,p.array[a+1]=d.y,a+=2;else if(3===p.size)if("c"===p.type)for(c=0;f>c;c++)d=p.value[c],p.array[a]=d.r,p.array[a+1]=d.g,p.array[a+2]=d.b,a+=3;else for(c=0;f>c;c++)d=p.value[c],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,a+=3;else if(4===p.size)for(c=0;f>c;c++)d=p.value[c],p.array[a]=d.x,p.array[a+1]=d.y,p.array[a+2]=d.z,p.array[a+3]=d.w,a+=4}if((R||i.sortParticles)&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglVertexBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,T,t)),(b||i.sortParticles)&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglColorBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,_,t)),S)for(h=0,u=S.length;u>h;h++)p=S[h],(p.needsUpdate||i.sortParticles)&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,p.buffer),Ft.bufferData(Ft.ARRAY_BUFFER,p.array,t))}function m(e,t){var i,r,o,n,a,s,l,h,u,c,f,d,p=e.vertices,m=e.colors,E=e.lineDistances,g=p.length,v=m.length,T=E.length,_=e.__vertexArray,x=e.__colorArray,y=e.__lineDistanceArray,R=e.verticesNeedUpdate,b=e.colorsNeedUpdate,S=e.lineDistancesNeedUpdate,w=e.__webglCustomAttributesList;if(R){for(i=0;g>i;i++)n=p[i],a=3*i,_[a]=n.x,_[a+1]=n.y,_[a+2]=n.z;Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglVertexBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,_,t)}if(b){for(r=0;v>r;r++)s=m[r],a=3*r,x[a]=s.r,x[a+1]=s.g,x[a+2]=s.b;Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglColorBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,x,t)}if(S){for(o=0;T>o;o++)y[o]=E[o];Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglLineDistanceBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,y,t)}if(w)for(l=0,h=w.length;h>l;l++)if(d=w[l],d.needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo)){if(a=0,c=d.value.length,1===d.size)for(u=0;c>u;u++)d.array[u]=d.value[u];else if(2===d.size)for(u=0;c>u;u++)f=d.value[u],d.array[a]=f.x,d.array[a+1]=f.y,a+=2;else if(3===d.size)if("c"===d.type)for(u=0;c>u;u++)f=d.value[u],d.array[a]=f.r,d.array[a+1]=f.g,d.array[a+2]=f.b,a+=3;else for(u=0;c>u;u++)f=d.value[u],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,a+=3;else if(4===d.size)for(u=0;c>u;u++)f=d.value[u],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,d.array[a+3]=f.w,a+=4;Ft.bindBuffer(Ft.ARRAY_BUFFER,d.buffer),Ft.bufferData(Ft.ARRAY_BUFFER,d.array,t)}}function E(e,t,i,r,o){if(e.__inittedArrays){var n,a,s,l,h,d,p,m,E,g,v,T,_,x,y,R,b,S,w,M,H,A,C,D,P,L,F,U,z,B,I,N,O,V,k,G,W,j,X,Y,q,K,Q=u(o),Z=c(o),$=f(o),J=Q===THREE.SmoothShading,et=0,tt=0,it=0,rt=0,ot=0,nt=0,at=0,st=0,lt=0,ht=0,ut=0,ct=0,ft=0,dt=e.__vertexArray,pt=e.__uvArray,mt=e.__uv2Array,Et=e.__normalArray,gt=e.__tangentArray,vt=e.__colorArray,Tt=e.__skinIndexArray,_t=e.__skinWeightArray,xt=e.__morphTargetsArrays,yt=e.__morphNormalsArrays,Rt=e.__webglCustomAttributesList,bt=e.__faceArray,St=e.__lineArray,wt=t.geometry,Mt=wt.verticesNeedUpdate,Ht=wt.elementsNeedUpdate,At=wt.uvsNeedUpdate,Ct=wt.normalsNeedUpdate,Dt=wt.tangentsNeedUpdate,Pt=wt.colorsNeedUpdate,Lt=wt.morphTargetsNeedUpdate,Ut=wt.vertices,zt=e.faces3,Bt=wt.faces,It=wt.faceVertexUvs[0],Nt=wt.faceVertexUvs[1],Ot=(wt.colors,wt.skinIndices),Vt=wt.skinWeights,kt=wt.morphTargets,Gt=wt.morphNormals;if(Mt){for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],T=Ut[l.a],_=Ut[l.b],x=Ut[l.c],dt[tt]=T.x,dt[tt+1]=T.y,dt[tt+2]=T.z,dt[tt+3]=_.x,dt[tt+4]=_.y,dt[tt+5]=_.z,dt[tt+6]=x.x,dt[tt+7]=x.y,dt[tt+8]=x.z,tt+=9;Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglVertexBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,dt,i)}if(Lt)for(k=0,G=kt.length;G>k;k++){for(ut=0,n=0,a=zt.length;a>n;n++)X=zt[n],l=Bt[X],T=kt[k].vertices[l.a],_=kt[k].vertices[l.b],x=kt[k].vertices[l.c],W=xt[k],W[ut]=T.x,W[ut+1]=T.y,W[ut+2]=T.z,W[ut+3]=_.x,W[ut+4]=_.y,W[ut+5]=_.z,W[ut+6]=x.x,W[ut+7]=x.y,W[ut+8]=x.z,o.morphNormals&&(J?(Y=Gt[k].vertexNormals[X],S=Y.a,w=Y.b,M=Y.c):(S=Gt[k].faceNormals[X],w=S,M=S),j=yt[k],j[ut]=S.x,j[ut+1]=S.y,j[ut+2]=S.z,j[ut+3]=w.x,j[ut+4]=w.y,j[ut+5]=w.z,j[ut+6]=M.x,j[ut+7]=M.y,j[ut+8]=M.z),ut+=9;Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k]),Ft.bufferData(Ft.ARRAY_BUFFER,xt[k],i),o.morphNormals&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k]),Ft.bufferData(Ft.ARRAY_BUFFER,yt[k],i))}if(Vt.length){for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],D=Vt[l.a],P=Vt[l.b],L=Vt[l.c],_t[ht]=D.x,_t[ht+1]=D.y,_t[ht+2]=D.z,_t[ht+3]=D.w,_t[ht+4]=P.x,_t[ht+5]=P.y,_t[ht+6]=P.z,_t[ht+7]=P.w,_t[ht+8]=L.x,_t[ht+9]=L.y,_t[ht+10]=L.z,_t[ht+11]=L.w,F=Ot[l.a],U=Ot[l.b],z=Ot[l.c],Tt[ht]=F.x,Tt[ht+1]=F.y,Tt[ht+2]=F.z,Tt[ht+3]=F.w,Tt[ht+4]=U.x,Tt[ht+5]=U.y,Tt[ht+6]=U.z,Tt[ht+7]=U.w,Tt[ht+8]=z.x,Tt[ht+9]=z.y,Tt[ht+10]=z.z,Tt[ht+11]=z.w,ht+=12;ht>0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,Tt,i),Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,_t,i))}if(Pt&&Z){for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],p=l.vertexColors,m=l.color,3===p.length&&Z===THREE.VertexColors?(H=p[0],A=p[1],C=p[2]):(H=m,A=m,C=m),vt[lt]=H.r,vt[lt+1]=H.g,vt[lt+2]=H.b,vt[lt+3]=A.r,vt[lt+4]=A.g,vt[lt+5]=A.b,vt[lt+6]=C.r,vt[lt+7]=C.g,vt[lt+8]=C.b,lt+=9;lt>0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglColorBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,vt,i))}if(Dt&&wt.hasTangents){for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],E=l.vertexTangents,y=E[0],R=E[1],b=E[2],gt[at]=y.x,gt[at+1]=y.y,gt[at+2]=y.z,gt[at+3]=y.w,gt[at+4]=R.x,gt[at+5]=R.y,gt[at+6]=R.z,gt[at+7]=R.w,gt[at+8]=b.x,gt[at+9]=b.y,gt[at+10]=b.z,gt[at+11]=b.w,at+=12;Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglTangentBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,gt,i)}if(Ct&&Q){for(n=0,a=zt.length;a>n;n++)if(l=Bt[zt[n]],h=l.vertexNormals,d=l.normal,3===h.length&&J)for(B=0;3>B;B++)N=h[B],Et[nt]=N.x,Et[nt+1]=N.y,Et[nt+2]=N.z,nt+=3;else for(B=0;3>B;B++)Et[nt]=d.x,Et[nt+1]=d.y,Et[nt+2]=d.z,nt+=3;Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglNormalBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,Et,i)}if(At&&It&&$){for(n=0,a=zt.length;a>n;n++)if(s=zt[n],g=It[s],void 0!==g)for(B=0;3>B;B++)O=g[B],pt[it]=O.x,pt[it+1]=O.y,it+=2;it>0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglUVBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,pt,i))}if(At&&Nt&&$){for(n=0,a=zt.length;a>n;n++)if(s=zt[n],v=Nt[s],void 0!==v)for(B=0;3>B;B++)V=v[B],mt[rt]=V.x,mt[rt+1]=V.y,rt+=2;rt>0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglUV2Buffer),Ft.bufferData(Ft.ARRAY_BUFFER,mt,i))}if(Ht){for(n=0,a=zt.length;a>n;n++)bt[ot]=et,bt[ot+1]=et+1,bt[ot+2]=et+2,ot+=3,St[st]=et,St[st+1]=et+1,St[st+2]=et,St[st+3]=et+2,St[st+4]=et+1,St[st+5]=et+2,st+=6,et+=3;Ft.bindBuffer(Ft.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Ft.bufferData(Ft.ELEMENT_ARRAY_BUFFER,bt,i),Ft.bindBuffer(Ft.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Ft.bufferData(Ft.ELEMENT_ARRAY_BUFFER,St,i)}if(Rt)for(B=0,I=Rt.length;I>B;B++)if(K=Rt[B],K.__original.needsUpdate){if(ct=0,ft=0,1===K.size){if(void 0===K.boundTo||"vertices"===K.boundTo)for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],K.array[ct]=K.value[l.a],K.array[ct+1]=K.value[l.b],K.array[ct+2]=K.value[l.c],ct+=3;else if("faces"===K.boundTo)for(n=0,a=zt.length;a>n;n++)q=K.value[zt[n]],K.array[ct]=q,K.array[ct+1]=q,K.array[ct+2]=q,ct+=3}else if(2===K.size){if(void 0===K.boundTo||"vertices"===K.boundTo)for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],T=K.value[l.a],_=K.value[l.b],x=K.value[l.c],K.array[ct]=T.x,K.array[ct+1]=T.y,K.array[ct+2]=_.x,K.array[ct+3]=_.y,K.array[ct+4]=x.x,K.array[ct+5]=x.y,ct+=6;else if("faces"===K.boundTo)for(n=0,a=zt.length;a>n;n++)q=K.value[zt[n]],T=q,_=q,x=q,K.array[ct]=T.x,K.array[ct+1]=T.y,K.array[ct+2]=_.x,K.array[ct+3]=_.y,K.array[ct+4]=x.x,K.array[ct+5]=x.y,ct+=6}else if(3===K.size){var Wt;if(Wt="c"===K.type?["r","g","b"]:["x","y","z"],void 0===K.boundTo||"vertices"===K.boundTo)for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],T=K.value[l.a],_=K.value[l.b],x=K.value[l.c],K.array[ct]=T[Wt[0]],K.array[ct+1]=T[Wt[1]],K.array[ct+2]=T[Wt[2]],K.array[ct+3]=_[Wt[0]],K.array[ct+4]=_[Wt[1]],K.array[ct+5]=_[Wt[2]],K.array[ct+6]=x[Wt[0]],K.array[ct+7]=x[Wt[1]],K.array[ct+8]=x[Wt[2]],ct+=9;else if("faces"===K.boundTo)for(n=0,a=zt.length;a>n;n++)q=K.value[zt[n]],T=q,_=q,x=q,K.array[ct]=T[Wt[0]],K.array[ct+1]=T[Wt[1]],K.array[ct+2]=T[Wt[2]],K.array[ct+3]=_[Wt[0]],K.array[ct+4]=_[Wt[1]],K.array[ct+5]=_[Wt[2]],K.array[ct+6]=x[Wt[0]],K.array[ct+7]=x[Wt[1]],K.array[ct+8]=x[Wt[2]],ct+=9;else if("faceVertices"===K.boundTo)for(n=0,a=zt.length;a>n;n++)q=K.value[zt[n]],T=q[0],_=q[1],x=q[2],K.array[ct]=T[Wt[0]],K.array[ct+1]=T[Wt[1]],K.array[ct+2]=T[Wt[2]],K.array[ct+3]=_[Wt[0]],K.array[ct+4]=_[Wt[1]],K.array[ct+5]=_[Wt[2]],K.array[ct+6]=x[Wt[0]],K.array[ct+7]=x[Wt[1]],K.array[ct+8]=x[Wt[2]],ct+=9}else if(4===K.size)if(void 0===K.boundTo||"vertices"===K.boundTo)for(n=0,a=zt.length;a>n;n++)l=Bt[zt[n]],T=K.value[l.a],_=K.value[l.b],x=K.value[l.c],K.array[ct]=T.x,K.array[ct+1]=T.y,K.array[ct+2]=T.z,K.array[ct+3]=T.w,K.array[ct+4]=_.x,K.array[ct+5]=_.y,K.array[ct+6]=_.z,K.array[ct+7]=_.w,K.array[ct+8]=x.x,K.array[ct+9]=x.y,K.array[ct+10]=x.z,K.array[ct+11]=x.w,ct+=12;else if("faces"===K.boundTo)for(n=0,a=zt.length;a>n;n++)q=K.value[zt[n]],T=q,_=q,x=q,K.array[ct]=T.x,K.array[ct+1]=T.y,K.array[ct+2]=T.z,K.array[ct+3]=T.w,K.array[ct+4]=_.x,K.array[ct+5]=_.y,K.array[ct+6]=_.z,K.array[ct+7]=_.w,K.array[ct+8]=x.x,K.array[ct+9]=x.y,K.array[ct+10]=x.z,K.array[ct+11]=x.w,ct+=12;else if("faceVertices"===K.boundTo)for(n=0,a=zt.length;a>n;n++)q=K.value[zt[n]],T=q[0],_=q[1],x=q[2],K.array[ct]=T.x,K.array[ct+1]=T.y,K.array[ct+2]=T.z,K.array[ct+3]=T.w,K.array[ct+4]=_.x,K.array[ct+5]=_.y,K.array[ct+6]=_.z,K.array[ct+7]=_.w,K.array[ct+8]=x.x,K.array[ct+9]=x.y,K.array[ct+10]=x.z,K.array[ct+11]=x.w,ct+=12;Ft.bindBuffer(Ft.ARRAY_BUFFER,K.buffer),Ft.bufferData(Ft.ARRAY_BUFFER,K.array,i)}r&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function g(e,t,i){var r,o,n=e.attributes;for(r in n)o=n[r],o.needsUpdate&&("index"===r?(Ft.bindBuffer(Ft.ELEMENT_ARRAY_BUFFER,o.buffer),Ft.bufferData(Ft.ELEMENT_ARRAY_BUFFER,o.array,t)):(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.buffer),Ft.bufferData(Ft.ARRAY_BUFFER,o.array,t)),o.needsUpdate=!1),i&&!o.dynamic&&(o.array=null)}function v(e){pi[e]||(Ft.enableVertexAttribArray(e),pi[e]=!0)}function T(){for(var e in pi)pi[e]&&(Ft.disableVertexAttribArray(e),pi[e]=!1)}function _(e,t,i){var r=e.program.attributes;if(-1!==i.morphTargetBase&&r.position>=0?(Ft.bindBuffer(Ft.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[i.morphTargetBase]),v(r.position),Ft.vertexAttribPointer(r.position,3,Ft.FLOAT,!1,0,0)):r.position>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,t.__webglVertexBuffer),v(r.position),Ft.vertexAttribPointer(r.position,3,Ft.FLOAT,!1,0,0)),i.morphTargetForcedOrder.length)for(var o=0,n=i.morphTargetForcedOrder,a=i.morphTargetInfluences;o<e.numSupportedMorphTargets&&o<n.length;)r["morphTarget"+o]>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[n[o]]),v(r["morphTarget"+o]),Ft.vertexAttribPointer(r["morphTarget"+o],3,Ft.FLOAT,!1,0,0)),r["morphNormal"+o]>=0&&e.morphNormals&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[n[o]]),v(r["morphNormal"+o]),Ft.vertexAttribPointer(r["morphNormal"+o],3,Ft.FLOAT,!1,0,0)),i.__webglMorphTargetInfluences[o]=a[n[o]],o++;else{var s,l,h=[],a=i.morphTargetInfluences,u=a.length;for(l=0;u>l;l++)s=a[l],s>0&&h.push([s,l]);h.length>e.numSupportedMorphTargets?(h.sort(y),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(y):0===h.length&&h.push([0,0]);for(var c,o=0;o<e.numSupportedMorphTargets;)h[o]?(c=h[o][1],r["morphTarget"+o]>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[c]),v(r["morphTarget"+o]),Ft.vertexAttribPointer(r["morphTarget"+o],3,Ft.FLOAT,!1,0,0)),r["morphNormal"+o]>=0&&e.morphNormals&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[c]),v(r["morphNormal"+o]),Ft.vertexAttribPointer(r["morphNormal"+o],3,Ft.FLOAT,!1,0,0)),i.__webglMorphTargetInfluences[o]=a[c]):i.__webglMorphTargetInfluences[o]=0,o++}null!==e.program.uniforms.morphTargetInfluences&&Ft.uniform1fv(e.program.uniforms.morphTargetInfluences,i.__webglMorphTargetInfluences)}function x(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function y(e,t){return t[0]-e[0]}function R(e,t,i){if(e.length)for(var r=0,o=e.length;o>r;r++)Gt=null,Yt=null,$t=-1,ii=-1,ri=-1,Qt=-1,Zt=-1,Xt=-1,jt=-1,_i=!0,e[r].render(t,i,fi,di),Gt=null,Yt=null,$t=-1,ii=-1,ri=-1,Qt=-1,Zt=-1,Xt=-1,jt=-1,_i=!0}function b(e,t,i,r,o,n,a,s){var l,h,u,c,f,d,p;t?(f=e.length-1,d=-1,p=-1):(f=0,d=e.length,p=1);for(var m=f;m!==d;m+=p)if(l=e[m],l.render){if(h=l.object,u=l.buffer,s)c=s;else{if(c=l[i],!c)continue;a&&Ot.setBlending(c.blending,c.blendEquation,c.blendSrc,c.blendDst),Ot.setDepthTest(c.depthTest),Ot.setDepthWrite(c.depthWrite),rt(c.polygonOffset,c.polygonOffsetFactor,c.polygonOffsetUnits)}Ot.setMaterialFaces(c),u instanceof THREE.BufferGeometry?Ot.renderBufferDirect(r,o,n,c,u,h):Ot.renderBuffer(r,o,n,c,u,h)}}function S(e,t,i,r,o,n,a){for(var s,l,h,u=0,c=e.length;c>u;u++)if(s=e[u],l=s.object,l.visible){if(a)h=a;else{if(h=s[t],!h)continue;n&&Ot.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Ot.setDepthTest(h.depthTest),Ot.setDepthWrite(h.depthWrite),rt(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Ot.renderImmediateObject(i,r,o,h,l)}}function w(e){var t=e.object,i=t.material;i.transparent?(e.transparent=i,e.opaque=null):(e.opaque=i,e.transparent=null)}function M(e){var t,i,r,o=e.object,n=e.buffer;r=o.material,r instanceof THREE.MeshFaceMaterial?(i=n.materialIndex,t=r.materials[i],t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)):(t=r,t&&(t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)))}function H(e,t){var i,r,o,n,a,s,l={},h=e.morphTargets.length,u=e.morphNormals.length,c=t instanceof THREE.MeshFaceMaterial;for(e.geometryGroups={},i=0,r=e.faces.length;r>i;i++)o=e.faces[i],n=c?o.materialIndex:0,void 0===l[n]&&(l[n]={hash:n,counter:0}),s=l[n].hash+"_"+l[n].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],materialIndex:n,vertices:0,numMorphTargets:h,numMorphNormals:u}),a=3,e.geometryGroups[s].vertices+a>65535&&(l[n].counter+=1,s=l[n].hash+"_"+l[n].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],materialIndex:n,vertices:0,numMorphTargets:h,numMorphNormals:u})),e.geometryGroups[s].faces3.push(i),e.geometryGroups[s].vertices+=a;e.geometryGroupsList=[];for(var f in e.geometryGroups)e.geometryGroups[f].id=qt++,e.geometryGroupsList.push(e.geometryGroups[f])}function A(e,o){var l,h,u,c;if(void 0===e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",Fi)),h=e.geometry,void 0===h);else if(h instanceof THREE.BufferGeometry)d(h);
else if(e instanceof THREE.Mesh){u=e.material,void 0===h.geometryGroups&&H(h,u);for(l in h.geometryGroups)c=h.geometryGroups[l],c.__webglVertexBuffer||(r(c),s(c,e),h.verticesNeedUpdate=!0,h.morphTargetsNeedUpdate=!0,h.elementsNeedUpdate=!0,h.uvsNeedUpdate=!0,h.normalsNeedUpdate=!0,h.tangentsNeedUpdate=!0,h.colorsNeedUpdate=!0)}else e instanceof THREE.Line?h.__webglVertexBuffer||(i(h),a(h,e),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0,h.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&(h.__webglVertexBuffer||(t(h),n(h,e),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0));if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(h=e.geometry,h instanceof THREE.BufferGeometry)C(o.__webglObjects,h,e);else if(h instanceof THREE.Geometry)for(l in h.geometryGroups)c=h.geometryGroups[l],C(o.__webglObjects,c,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(h=e.geometry,C(o.__webglObjects,h,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?D(o.__webglObjectsImmediate,e):e instanceof THREE.Sprite?o.__webglSprites.push(e):e instanceof THREE.LensFlare&&o.__webglFlares.push(e);e.__webglActive=!0}}function C(e,t,i){e.push({id:null,buffer:t,object:i,opaque:null,transparent:null,z:0})}function D(e,t){e.push({id:null,object:t,opaque:null,transparent:null,z:0})}function P(e){var t,i,r,o=e.geometry;if(o instanceof THREE.BufferGeometry)g(o,Ft.DYNAMIC_DRAW,!o.dynamic);else if(e instanceof THREE.Mesh){for(var n=0,a=o.geometryGroupsList.length;a>n;n++)t=o.geometryGroupsList[n],r=l(e,t),o.buffersNeedUpdate&&s(t,e),i=r.attributes&&L(r),(o.verticesNeedUpdate||o.morphTargetsNeedUpdate||o.elementsNeedUpdate||o.uvsNeedUpdate||o.normalsNeedUpdate||o.colorsNeedUpdate||o.tangentsNeedUpdate||i)&&E(t,e,Ft.DYNAMIC_DRAW,!o.dynamic,r);o.verticesNeedUpdate=!1,o.morphTargetsNeedUpdate=!1,o.elementsNeedUpdate=!1,o.uvsNeedUpdate=!1,o.normalsNeedUpdate=!1,o.colorsNeedUpdate=!1,o.tangentsNeedUpdate=!1,o.buffersNeedUpdate=!1,r.attributes&&F(r)}else e instanceof THREE.Line?(r=l(e,o),i=r.attributes&&L(r),(o.verticesNeedUpdate||o.colorsNeedUpdate||o.lineDistancesNeedUpdate||i)&&m(o,Ft.DYNAMIC_DRAW),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,o.lineDistancesNeedUpdate=!1,r.attributes&&F(r)):e instanceof THREE.ParticleSystem&&(r=l(e,o),i=r.attributes&&L(r),(o.verticesNeedUpdate||o.colorsNeedUpdate||e.sortParticles||i)&&p(o,Ft.DYNAMIC_DRAW,e),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,r.attributes&&F(r))}function L(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function F(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function U(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?z(t.__webglObjects,e):e instanceof THREE.Sprite?B(t.__webglSprites,e):e instanceof THREE.LensFlare?B(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&z(t.__webglObjectsImmediate,e),delete e.__webglActive}function z(e,t){for(var i=e.length-1;i>=0;i--)e[i].object===t&&e.splice(i,1)}function B(e,t){for(var i=e.length-1;i>=0;i--)e[i]===t&&e.splice(i,1)}function I(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}function N(e,t,i,r,o){Kt=0,r.needsUpdate&&(r.program&&ki(r),Ot.initMaterial(r,t,i,o),r.needsUpdate=!1),r.morphTargets&&(o.__webglMorphTargetInfluences||(o.__webglMorphTargetInfluences=new Float32Array(Ot.maxMorphTargets)));var n=!1,a=r.program,s=a.uniforms,l=r.uniforms;if(a!==Gt&&(Ft.useProgram(a),Gt=a,n=!0),r.id!==jt&&(jt=r.id,n=!0),(n||e!==Yt)&&(Ft.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==Yt&&(Yt=e)),r.skinning)if(Mi&&o.useVertexTexture){if(null!==s.boneTexture){var h=Q();Ft.uniform1i(s.boneTexture,h),Ot.setTexture(o.boneTexture,h)}null!==s.boneTextureWidth&&Ft.uniform1i(s.boneTextureWidth,o.boneTextureWidth),null!==s.boneTextureHeight&&Ft.uniform1i(s.boneTextureHeight,o.boneTextureHeight)}else null!==s.boneGlobalMatrices&&Ft.uniformMatrix4fv(s.boneGlobalMatrices,!1,o.boneMatrices);return n&&(i&&r.fog&&W(l,i),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights)&&(_i&&(tt(a,t),_i=!1),Y(l,xi)),(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial)&&O(l,r),r instanceof THREE.LineBasicMaterial?V(l,r):r instanceof THREE.LineDashedMaterial?(V(l,r),k(l,r)):r instanceof THREE.ParticleSystemMaterial?G(l,r):r instanceof THREE.MeshPhongMaterial?j(l,r):r instanceof THREE.MeshLambertMaterial?X(l,r):r instanceof THREE.MeshDepthMaterial?(l.mNear.value=e.near,l.mFar.value=e.far,l.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(l.opacity.value=r.opacity),o.receiveShadow&&!r._shadowPass&&q(l,t),Z(a,r.uniformsList),(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==s.cameraPosition&&(vi.setFromMatrixPosition(e.matrixWorld),Ft.uniform3f(s.cameraPosition,vi.x,vi.y,vi.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==s.viewMatrix&&Ft.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)),K(s,o),null!==s.modelMatrix&&Ft.uniformMatrix4fv(s.modelMatrix,!1,o.matrixWorld.elements),a}function O(e,t){e.opacity.value=t.opacity,Ot.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color,e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var i;if(t.map?i=t.map:t.specularMap?i=t.specularMap:t.normalMap?i=t.normalMap:t.bumpMap&&(i=t.bumpMap),void 0!==i){var r=i.offset,o=i.repeat;e.offsetRepeat.value.set(r.x,r.y,o.x,o.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,e.reflectivity.value=Ot.gammaInput?t.reflectivity:t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function V(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function k(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function G(e,t){e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=St.height/2,e.map.value=t.map}function W(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function j(e,t){e.shininess.value=t.shininess,Ot.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function X(e,t){Ot.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function Y(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}function q(e,t){if(e.shadowMatrix)for(var i=0,r=0,o=t.length;o>r;r++){var n=t[r];n.castShadow&&(n instanceof THREE.SpotLight||n instanceof THREE.DirectionalLight&&!n.shadowCascade)&&(e.shadowMap.value[i]=n.shadowMap,e.shadowMapSize.value[i]=n.shadowMapSize,e.shadowMatrix.value[i]=n.shadowMatrix,e.shadowDarkness.value[i]=n.shadowDarkness,e.shadowBias.value[i]=n.shadowBias,i++)}}function K(e,t){Ft.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&Ft.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}function Q(){var e=Kt;return e>=yi&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+yi),Kt+=1,e}function Z(e,t){var i,r,o,n,a,s,l,h,u,c,f;for(u=0,c=t.length;c>u;u++)if(n=e.uniforms[t[u][1]])if(i=t[u][0],o=i.type,r=i.value,"i"===o)Ft.uniform1i(n,r);else if("f"===o)Ft.uniform1f(n,r);else if("v2"===o)Ft.uniform2f(n,r.x,r.y);else if("v3"===o)Ft.uniform3f(n,r.x,r.y,r.z);else if("v4"===o)Ft.uniform4f(n,r.x,r.y,r.z,r.w);else if("c"===o)Ft.uniform3f(n,r.r,r.g,r.b);else if("iv1"===o)Ft.uniform1iv(n,r);else if("iv"===o)Ft.uniform3iv(n,r);else if("fv1"===o)Ft.uniform1fv(n,r);else if("fv"===o)Ft.uniform3fv(n,r);else if("v2v"===o){for(void 0===i._array&&(i._array=new Float32Array(2*r.length)),l=0,h=r.length;h>l;l++)f=2*l,i._array[f]=r[l].x,i._array[f+1]=r[l].y;Ft.uniform2fv(n,i._array)}else if("v3v"===o){for(void 0===i._array&&(i._array=new Float32Array(3*r.length)),l=0,h=r.length;h>l;l++)f=3*l,i._array[f]=r[l].x,i._array[f+1]=r[l].y,i._array[f+2]=r[l].z;Ft.uniform3fv(n,i._array)}else if("v4v"===o){for(void 0===i._array&&(i._array=new Float32Array(4*r.length)),l=0,h=r.length;h>l;l++)f=4*l,i._array[f]=r[l].x,i._array[f+1]=r[l].y,i._array[f+2]=r[l].z,i._array[f+3]=r[l].w;Ft.uniform4fv(n,i._array)}else if("m4"===o)void 0===i._array&&(i._array=new Float32Array(16)),r.flattenToArray(i._array),Ft.uniformMatrix4fv(n,!1,i._array);else if("m4v"===o){for(void 0===i._array&&(i._array=new Float32Array(16*r.length)),l=0,h=r.length;h>l;l++)r[l].flattenToArrayOffset(i._array,16*l);Ft.uniformMatrix4fv(n,!1,i._array)}else if("t"===o){if(a=r,s=Q(),Ft.uniform1i(n,s),!a)continue;a.image instanceof Array&&6===a.image.length?dt(a,s):a instanceof THREE.WebGLRenderTargetCube?pt(a,s):Ot.setTexture(a,s)}else if("tv"===o){for(void 0===i._array&&(i._array=[]),l=0,h=i.value.length;h>l;l++)i._array[l]=Q();for(Ft.uniform1iv(n,i._array),l=0,h=i.value.length;h>l;l++)a=i.value[l],s=i._array[l],a&&Ot.setTexture(a,s)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+o)}function $(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function J(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function et(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function tt(e,t){var i,r,o,n,a,s,l,h,u,c=0,f=0,d=0,p=xi,m=p.directional.colors,E=p.directional.positions,g=p.point.colors,v=p.point.positions,T=p.point.distances,_=p.spot.colors,x=p.spot.positions,y=p.spot.distances,R=p.spot.directions,b=p.spot.anglesCos,S=p.spot.exponents,w=p.hemi.skyColors,M=p.hemi.groundColors,H=p.hemi.positions,A=0,C=0,D=0,P=0,L=0,F=0,U=0,z=0,B=0,I=0,N=0,O=0;for(i=0,r=t.length;r>i;i++)if(o=t[i],!o.onlyShadow)if(n=o.color,l=o.intensity,u=o.distance,o instanceof THREE.AmbientLight){if(!o.visible)continue;Ot.gammaInput?(c+=n.r*n.r,f+=n.g*n.g,d+=n.b*n.b):(c+=n.r,f+=n.g,d+=n.b)}else if(o instanceof THREE.DirectionalLight){if(L+=1,!o.visible)continue;if(Ti.setFromMatrixPosition(o.matrixWorld),vi.setFromMatrixPosition(o.target.matrixWorld),Ti.sub(vi),Ti.normalize(),0===Ti.x&&0===Ti.y&&0===Ti.z)continue;B=3*A,E[B]=Ti.x,E[B+1]=Ti.y,E[B+2]=Ti.z,Ot.gammaInput?J(m,B,n,l*l):et(m,B,n,l),A+=1}else if(o instanceof THREE.PointLight){if(F+=1,!o.visible)continue;I=3*C,Ot.gammaInput?J(g,I,n,l*l):et(g,I,n,l),vi.setFromMatrixPosition(o.matrixWorld),v[I]=vi.x,v[I+1]=vi.y,v[I+2]=vi.z,T[C]=u,C+=1}else if(o instanceof THREE.SpotLight){if(U+=1,!o.visible)continue;N=3*D,Ot.gammaInput?J(_,N,n,l*l):et(_,N,n,l),vi.setFromMatrixPosition(o.matrixWorld),x[N]=vi.x,x[N+1]=vi.y,x[N+2]=vi.z,y[D]=u,Ti.copy(vi),vi.setFromMatrixPosition(o.target.matrixWorld),Ti.sub(vi),Ti.normalize(),R[N]=Ti.x,R[N+1]=Ti.y,R[N+2]=Ti.z,b[D]=Math.cos(o.angle),S[D]=o.exponent,D+=1}else if(o instanceof THREE.HemisphereLight){if(z+=1,!o.visible)continue;if(Ti.setFromMatrixPosition(o.matrixWorld),Ti.normalize(),0===Ti.x&&0===Ti.y&&0===Ti.z)continue;O=3*P,H[O]=Ti.x,H[O+1]=Ti.y,H[O+2]=Ti.z,a=o.color,s=o.groundColor,Ot.gammaInput?(h=l*l,J(w,O,a,h),J(M,O,s,h)):(et(w,O,a,l),et(M,O,s,l)),P+=1}for(i=3*A,r=Math.max(m.length,3*L);r>i;i++)m[i]=0;for(i=3*C,r=Math.max(g.length,3*F);r>i;i++)g[i]=0;for(i=3*D,r=Math.max(_.length,3*U);r>i;i++)_[i]=0;for(i=3*P,r=Math.max(w.length,3*z);r>i;i++)w[i]=0;for(i=3*P,r=Math.max(M.length,3*z);r>i;i++)M[i]=0;p.directional.length=A,p.point.length=C,p.spot.length=D,p.hemi.length=P,p.ambient[0]=c,p.ambient[1]=f,p.ambient[2]=d}function it(e){e!==si&&(Ft.lineWidth(e),si=e)}function rt(e,t,i){oi!==e&&(e?Ft.enable(Ft.POLYGON_OFFSET_FILL):Ft.disable(Ft.POLYGON_OFFSET_FILL),oi=e),!e||ni===t&&ai===i||(Ft.polygonOffset(t,i),ni=t,ai=i)}function ot(e){var t,i,r=[];for(var o in e)t=e[o],t!==!1&&(i="#define "+o+" "+t,r.push(i));return r.join("\n")}function nt(e,t,i,r,o,n,a,s){var l,h,u,c,f,d=[];e?d.push(e):(d.push(t),d.push(i));for(u in n)d.push(u),d.push(n[u]);for(l in a)d.push(l),d.push(a[l]);for(f=d.join(),l=0,h=Vt.length;h>l;l++){var p=Vt[l];if(p.code===f)return p.usedTimes++,p.program}var m="SHADOWMAP_TYPE_BASIC";a.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":a.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var E=ot(n);c=Ft.createProgram();var g=["precision "+wt+" float;","precision "+wt+" int;",E,wi?"#define VERTEX_TEXTURES":"",Ot.gammaInput?"#define GAMMA_INPUT":"",Ot.gammaOutput?"#define GAMMA_OUTPUT":"",Ot.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+a.maxDirLights,"#define MAX_POINT_LIGHTS "+a.maxPointLights,"#define MAX_SPOT_LIGHTS "+a.maxSpotLights,"#define MAX_HEMI_LIGHTS "+a.maxHemiLights,"#define MAX_SHADOWS "+a.maxShadows,"#define MAX_BONES "+a.maxBones,a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.lightMap?"#define USE_LIGHTMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.vertexColors?"#define USE_COLOR":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals?"#define USE_MORPHNORMALS":"",a.perPixel?"#define PHONG_PER_PIXEL":"",a.wrapAround?"#define WRAP_AROUND":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+m:"",a.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",a.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),v=["precision "+wt+" float;","precision "+wt+" int;",a.bumpMap||a.normalMap?"#extension GL_OES_standard_derivatives : enable":"",E,"#define MAX_DIR_LIGHTS "+a.maxDirLights,"#define MAX_POINT_LIGHTS "+a.maxPointLights,"#define MAX_SPOT_LIGHTS "+a.maxSpotLights,"#define MAX_HEMI_LIGHTS "+a.maxHemiLights,"#define MAX_SHADOWS "+a.maxShadows,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"",Ot.gammaInput?"#define GAMMA_INPUT":"",Ot.gammaOutput?"#define GAMMA_OUTPUT":"",Ot.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.lightMap?"#define USE_LIGHTMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.vertexColors?"#define USE_COLOR":"",a.metal?"#define METAL":"",a.perPixel?"#define PHONG_PER_PIXEL":"",a.wrapAround?"#define WRAP_AROUND":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+m:"",a.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",a.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),T=ht("vertex",g+i),_=ht("fragment",v+t);Ft.attachShader(c,T),Ft.attachShader(c,_),s&&Ft.bindAttribLocation(c,0,s),Ft.linkProgram(c),Ft.getProgramParameter(c,Ft.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+Ft.getProgramParameter(c,Ft.VALIDATE_STATUS)+", gl error ["+Ft.getError()+"]"),console.error("Program Info Log: "+Ft.getProgramInfoLog(c))),Ft.deleteShader(_),Ft.deleteShader(T),c.uniforms={},c.attributes={};var x,y,R,b;x=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],a.useVertexTexture?(x.push("boneTexture"),x.push("boneTextureWidth"),x.push("boneTextureHeight")):x.push("boneGlobalMatrices");for(y in r)x.push(y);for(at(c,x),x=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],b=0;b<a.maxMorphTargets;b++)x.push("morphTarget"+b);for(b=0;b<a.maxMorphNormals;b++)x.push("morphNormal"+b);for(R in o)x.push(R);return st(c,x),c.id=kt++,Vt.push({program:c,code:f,usedTimes:1}),Ot.info.memory.programs=Vt.length,c}function at(e,t){var i,r,o;for(i=0,r=t.length;r>i;i++)o=t[i],e.uniforms[o]=Ft.getUniformLocation(e,o)}function st(e,t){var i,r,o;for(i=0,r=t.length;r>i;i++)o=t[i],e.attributes[o]=Ft.getAttribLocation(e,o)}function lt(e){for(var t=e.split("\n"),i=0,r=t.length;r>i;i++)t[i]=i+1+": "+t[i];return t.join("\n")}function ht(e,t){var i;return"fragment"===e?i=Ft.createShader(Ft.FRAGMENT_SHADER):"vertex"===e&&(i=Ft.createShader(Ft.VERTEX_SHADER)),Ft.shaderSource(i,t),Ft.compileShader(i),Ft.getShaderParameter(i,Ft.COMPILE_STATUS)?i:(console.error(Ft.getShaderInfoLog(i)),console.error(lt(t)),null)}function ut(e){return 0===(e&e-1)}function ct(e,t,i){i?(Ft.texParameteri(e,Ft.TEXTURE_WRAP_S,Tt(t.wrapS)),Ft.texParameteri(e,Ft.TEXTURE_WRAP_T,Tt(t.wrapT)),Ft.texParameteri(e,Ft.TEXTURE_MAG_FILTER,Tt(t.magFilter)),Ft.texParameteri(e,Ft.TEXTURE_MIN_FILTER,Tt(t.minFilter))):(Ft.texParameteri(e,Ft.TEXTURE_WRAP_S,Ft.CLAMP_TO_EDGE),Ft.texParameteri(e,Ft.TEXTURE_WRAP_T,Ft.CLAMP_TO_EDGE),Ft.texParameteri(e,Ft.TEXTURE_MAG_FILTER,vt(t.magFilter)),Ft.texParameteri(e,Ft.TEXTURE_MIN_FILTER,vt(t.minFilter))),It&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(Ft.texParameterf(e,It.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Si)),t.__oldAnisotropy=t.anisotropy)}function ft(e,t){if(e.width<=t&&e.height<=t)return e;var i=Math.max(e.width,e.height),r=Math.floor(e.width*t/i),o=Math.floor(e.height*t/i),n=document.createElement("canvas");n.width=r,n.height=o;var a=n.getContext("2d");return a.drawImage(e,0,0,e.width,e.height,0,0,r,o),n}function dt(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",Ui),e.image.__webglTextureCube=Ft.createTexture(),Ot.info.memory.textures++),Ft.activeTexture(Ft.TEXTURE0+t),Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Ft.pixelStorei(Ft.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var i=e instanceof THREE.CompressedTexture,r=[],o=0;6>o;o++)r[o]=Ot.autoScaleCubemaps&&!i?ft(e.image[o],bi):e.image[o];var n=r[0],a=ut(n.width)&&ut(n.height),s=Tt(e.format),l=Tt(e.type);ct(Ft.TEXTURE_CUBE_MAP,e,a);for(var o=0;6>o;o++)if(i)for(var h,u=r[o].mipmaps,c=0,f=u.length;f>c;c++)h=u[c],e.format!==THREE.RGBAFormat?Ft.compressedTexImage2D(Ft.TEXTURE_CUBE_MAP_POSITIVE_X+o,c,s,h.width,h.height,0,h.data):Ft.texImage2D(Ft.TEXTURE_CUBE_MAP_POSITIVE_X+o,c,s,h.width,h.height,0,s,l,h.data);else Ft.texImage2D(Ft.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,s,s,l,r[o]);e.generateMipmaps&&a&&Ft.generateMipmap(Ft.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Ft.activeTexture(Ft.TEXTURE0+t),Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function pt(e,t){Ft.activeTexture(Ft.TEXTURE0+t),Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,e.__webglTexture)}function mt(e,t,i){Ft.bindFramebuffer(Ft.FRAMEBUFFER,e),Ft.framebufferTexture2D(Ft.FRAMEBUFFER,Ft.COLOR_ATTACHMENT0,i,t.__webglTexture,0)}function Et(e,t){Ft.bindRenderbuffer(Ft.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Ft.renderbufferStorage(Ft.RENDERBUFFER,Ft.DEPTH_COMPONENT16,t.width,t.height),Ft.framebufferRenderbuffer(Ft.FRAMEBUFFER,Ft.DEPTH_ATTACHMENT,Ft.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Ft.renderbufferStorage(Ft.RENDERBUFFER,Ft.DEPTH_STENCIL,t.width,t.height),Ft.framebufferRenderbuffer(Ft.FRAMEBUFFER,Ft.DEPTH_STENCIL_ATTACHMENT,Ft.RENDERBUFFER,e)):Ft.renderbufferStorage(Ft.RENDERBUFFER,Ft.RGBA4,t.width,t.height)}function gt(e){e instanceof THREE.WebGLRenderTargetCube?(Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,e.__webglTexture),Ft.generateMipmap(Ft.TEXTURE_CUBE_MAP),Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,null)):(Ft.bindTexture(Ft.TEXTURE_2D,e.__webglTexture),Ft.generateMipmap(Ft.TEXTURE_2D),Ft.bindTexture(Ft.TEXTURE_2D,null))}function vt(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Ft.NEAREST:Ft.LINEAR}function Tt(e){if(e===THREE.RepeatWrapping)return Ft.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Ft.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Ft.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Ft.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Ft.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Ft.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Ft.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Ft.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Ft.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Ft.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Ft.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Ft.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Ft.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Ft.BYTE;if(e===THREE.ShortType)return Ft.SHORT;if(e===THREE.UnsignedShortType)return Ft.UNSIGNED_SHORT;if(e===THREE.IntType)return Ft.INT;if(e===THREE.UnsignedIntType)return Ft.UNSIGNED_INT;if(e===THREE.FloatType)return Ft.FLOAT;if(e===THREE.AlphaFormat)return Ft.ALPHA;if(e===THREE.RGBFormat)return Ft.RGB;if(e===THREE.RGBAFormat)return Ft.RGBA;if(e===THREE.LuminanceFormat)return Ft.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Ft.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Ft.FUNC_ADD;if(e===THREE.SubtractEquation)return Ft.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Ft.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Ft.ZERO;if(e===THREE.OneFactor)return Ft.ONE;if(e===THREE.SrcColorFactor)return Ft.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Ft.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Ft.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Ft.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Ft.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Ft.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Ft.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Ft.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Ft.SRC_ALPHA_SATURATE;if(void 0!==Nt){if(e===THREE.RGB_S3TC_DXT1_Format)return Nt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Nt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Nt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Nt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function _t(e){if(Mi&&e&&e.useVertexTexture)return 1024;var t=Ft.getParameter(Ft.MAX_VERTEX_UNIFORM_VECTORS),i=Math.floor((t-20)/4),r=i;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(r=Math.min(e.bones.length,r),r<e.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)")),r}function xt(e){for(var t=0,i=0,r=0,o=0,n=0,a=e.length;a>n;n++){var s=e[n];s.onlyShadow||(s instanceof THREE.DirectionalLight&&t++,s instanceof THREE.PointLight&&i++,s instanceof THREE.SpotLight&&r++,s instanceof THREE.HemisphereLight&&o++)}return{directional:t,point:i,spot:r,hemi:o}}function yt(e){for(var t=0,i=0,r=e.length;r>i;i++){var o=e[i];o.castShadow&&(o instanceof THREE.SpotLight&&t++,o instanceof THREE.DirectionalLight&&!o.shadowCascade&&t++)}return t}function Rt(){try{var e={alpha:Mt,premultipliedAlpha:Ht,antialias:At,stencil:Ct,preserveDrawingBuffer:Dt};if(Ft=St.getContext("webgl",e)||St.getContext("experimental-webgl",e),null===Ft)throw"Error creating WebGL context."}catch(t){console.error(t)}Ut=Ft.getExtension("OES_texture_float"),zt=Ft.getExtension("OES_texture_float_linear"),Bt=Ft.getExtension("OES_standard_derivatives"),It=Ft.getExtension("EXT_texture_filter_anisotropic")||Ft.getExtension("MOZ_EXT_texture_filter_anisotropic")||Ft.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Nt=Ft.getExtension("WEBGL_compressed_texture_s3tc")||Ft.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Ft.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Ut||console.log("THREE.WebGLRenderer: Float textures not supported."),Bt||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),It||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Nt||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===Ft.getShaderPrecisionFormat&&(Ft.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}function bt(){Ft.clearColor(0,0,0,1),Ft.clearDepth(1),Ft.clearStencil(0),Ft.enable(Ft.DEPTH_TEST),Ft.depthFunc(Ft.LEQUAL),Ft.frontFace(Ft.CCW),Ft.cullFace(Ft.BACK),Ft.enable(Ft.CULL_FACE),Ft.enable(Ft.BLEND),Ft.blendEquation(Ft.FUNC_ADD),Ft.blendFunc(Ft.SRC_ALPHA,Ft.ONE_MINUS_SRC_ALPHA),Ft.viewport(li,hi,ui,ci),Ft.clearColor(Pt.r,Pt.g,Pt.b,Lt)}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var St=void 0!==e.canvas?e.canvas:document.createElement("canvas"),wt=void 0!==e.precision?e.precision:"highp",Mt=void 0!==e.alpha?e.alpha:!1,Ht=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,At=void 0!==e.antialias?e.antialias:!1,Ct=void 0!==e.stencil?e.stencil:!0,Dt=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,Pt=new THREE.Color(0),Lt=0;this.domElement=St,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Ft,Ut,zt,Bt,It,Nt,Ot=this,Vt=[],kt=0,Gt=null,Wt=null,jt=-1,Xt=null,Yt=null,qt=0,Kt=0,Qt=-1,Zt=-1,$t=-1,Jt=-1,ei=-1,ti=-1,ii=-1,ri=-1,oi=null,ni=null,ai=null,si=null,li=0,hi=0,ui=St.width,ci=St.height,fi=0,di=0,pi={},mi=new THREE.Frustum,Ei=new THREE.Matrix4,gi=new THREE.Matrix4,vi=new THREE.Vector3,Ti=new THREE.Vector3,_i=!0,xi={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};Rt(),bt(),this.context=Ft;var yi=Ft.getParameter(Ft.MAX_TEXTURE_IMAGE_UNITS),Ri=Ft.getParameter(Ft.MAX_VERTEX_TEXTURE_IMAGE_UNITS),bi=(Ft.getParameter(Ft.MAX_TEXTURE_SIZE),Ft.getParameter(Ft.MAX_CUBE_MAP_TEXTURE_SIZE)),Si=It?Ft.getParameter(It.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,wi=Ri>0,Mi=wi&&Ut,Hi=(Nt?Ft.getParameter(Ft.COMPRESSED_TEXTURE_FORMATS):[],Ft.getShaderPrecisionFormat(Ft.VERTEX_SHADER,Ft.HIGH_FLOAT)),Ai=Ft.getShaderPrecisionFormat(Ft.VERTEX_SHADER,Ft.MEDIUM_FLOAT),Ci=(Ft.getShaderPrecisionFormat(Ft.VERTEX_SHADER,Ft.LOW_FLOAT),Ft.getShaderPrecisionFormat(Ft.FRAGMENT_SHADER,Ft.HIGH_FLOAT)),Di=Ft.getShaderPrecisionFormat(Ft.FRAGMENT_SHADER,Ft.MEDIUM_FLOAT),Pi=(Ft.getShaderPrecisionFormat(Ft.FRAGMENT_SHADER,Ft.LOW_FLOAT),Ft.getShaderPrecisionFormat(Ft.VERTEX_SHADER,Ft.HIGH_INT),Ft.getShaderPrecisionFormat(Ft.VERTEX_SHADER,Ft.MEDIUM_INT),Ft.getShaderPrecisionFormat(Ft.VERTEX_SHADER,Ft.LOW_INT),Ft.getShaderPrecisionFormat(Ft.FRAGMENT_SHADER,Ft.HIGH_INT),Ft.getShaderPrecisionFormat(Ft.FRAGMENT_SHADER,Ft.MEDIUM_INT),Ft.getShaderPrecisionFormat(Ft.FRAGMENT_SHADER,Ft.LOW_INT),Hi.precision>0&&Ci.precision>0),Li=Ai.precision>0&&Di.precision>0;"highp"!==wt||Pi||(Li?(wt="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(wt="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==wt||Li||(wt="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Ft},this.supportsVertexTextures=function(){return wi},this.supportsFloatTextures=function(){return Ut},this.supportsStandardDerivatives=function(){return Bt},this.supportsCompressedTextureS3TC=function(){return Nt},this.getMaxAnisotropy=function(){return Si},this.getPrecision=function(){return wt},this.setSize=function(e,t,i){St.width=e*this.devicePixelRatio,St.height=t*this.devicePixelRatio,1!==this.devicePixelRatio&&i!==!1&&(St.style.width=e+"px",St.style.height=t+"px"),this.setViewport(0,0,St.width,St.height)},this.setViewport=function(e,t,i,r){li=void 0!==e?e:0,hi=void 0!==t?t:0,ui=void 0!==i?i:St.width,ci=void 0!==r?r:St.height,Ft.viewport(li,hi,ui,ci)},this.setScissor=function(e,t,i,r){Ft.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?Ft.enable(Ft.SCISSOR_TEST):Ft.disable(Ft.SCISSOR_TEST)},this.setClearColor=function(e,t){Pt.set(e),Lt=void 0!==t?t:1,Ft.clearColor(Pt.r,Pt.g,Pt.b,Lt)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return Pt},this.getClearAlpha=function(){return Lt},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=Ft.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=Ft.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=Ft.STENCIL_BUFFER_BIT),Ft.clear(r)},this.clearColor=function(){Ft.clear(Ft.COLOR_BUFFER_BIT)},this.clearDepth=function(){Ft.clear(Ft.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Ft.clear(Ft.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){Gt=null,$t=-1,ii=-1,ri=-1,Xt=-1,jt=-1,_i=!0,Qt=-1,Zt=-1,this.shadowMapPlugin.update(e,t)};var Fi=function(e){var t=e.target;t.removeEventListener("dispose",Fi),Ni(t)},Ui=function(e){var t=e.target;
t.removeEventListener("dispose",Ui),Oi(t),Ot.info.memory.textures--},zi=function(e){var t=e.target;t.removeEventListener("dispose",zi),Vi(t),Ot.info.memory.textures--},Bi=function(e){var t=e.target;t.removeEventListener("dispose",Bi),ki(t)},Ii=function(e){if(void 0!==e.__webglVertexBuffer&&Ft.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&Ft.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&Ft.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&Ft.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&Ft.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&Ft.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&Ft.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&Ft.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&Ft.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&Ft.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&Ft.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Ft.deleteBuffer(e.__webglCustomAttributesList[t].buffer);Ot.info.memory.geometries--},Ni=function(e){if(e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t=e.attributes;for(var i in t)void 0!==t[i].buffer&&Ft.deleteBuffer(t[i].buffer);Ot.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(var r in e.geometryGroups){var o=e.geometryGroups[r];if(void 0!==o.numMorphTargets)for(var n=0,a=o.numMorphTargets;a>n;n++)Ft.deleteBuffer(o.__webglMorphTargetsBuffers[n]);if(void 0!==o.numMorphNormals)for(var n=0,a=o.numMorphNormals;a>n;n++)Ft.deleteBuffer(o.__webglMorphNormalsBuffers[n]);Ii(o)}else Ii(e)},Oi=function(e){if(e.image&&e.image.__webglTextureCube)Ft.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,Ft.deleteTexture(e.__webglTexture)}},Vi=function(e){if(e&&e.__webglTexture)if(Ft.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Ft.deleteFramebuffer(e.__webglFramebuffer[t]),Ft.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Ft.deleteFramebuffer(e.__webglFramebuffer),Ft.deleteRenderbuffer(e.__webglRenderbuffer)},ki=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var i,r,o,n=!1;for(i=0,r=Vt.length;r>i;i++)if(o=Vt[i],o.program===t){o.usedTimes--,0===o.usedTimes&&(n=!0);break}if(n===!0){var a=[];for(i=0,r=Vt.length;r>i;i++)o=Vt[i],o.program!==t&&a.push(o);Vt=a,Ft.deleteProgram(t),Ot.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Ft.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Ft.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Ft.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Ft.createBuffer()),e.hasPositions&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglVertexBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,e.positionArray,Ft.DYNAMIC_DRAW),Ft.enableVertexAttribArray(t.attributes.position),Ft.vertexAttribPointer(t.attributes.position,3,Ft.FLOAT,!1,0,0)),e.hasNormals){if(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===THREE.FlatShading){var r,o,n,a,s,l,h,u,c,f,d,p,m,E,g=3*e.count;for(E=0;g>E;E+=9)m=e.normalArray,a=m[E],h=m[E+1],f=m[E+2],s=m[E+3],u=m[E+4],d=m[E+5],l=m[E+6],c=m[E+7],p=m[E+8],r=(a+s+l)/3,o=(h+u+c)/3,n=(f+d+p)/3,m[E]=r,m[E+1]=o,m[E+2]=n,m[E+3]=r,m[E+4]=o,m[E+5]=n,m[E+6]=r,m[E+7]=o,m[E+8]=n}Ft.bufferData(Ft.ARRAY_BUFFER,e.normalArray,Ft.DYNAMIC_DRAW),Ft.enableVertexAttribArray(t.attributes.normal),Ft.vertexAttribPointer(t.attributes.normal,3,Ft.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglUvBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,e.uvArray,Ft.DYNAMIC_DRAW),Ft.enableVertexAttribArray(t.attributes.uv),Ft.vertexAttribPointer(t.attributes.uv,2,Ft.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,e.__webglColorBuffer),Ft.bufferData(Ft.ARRAY_BUFFER,e.colorArray,Ft.DYNAMIC_DRAW),Ft.enableVertexAttribArray(t.attributes.color),Ft.vertexAttribPointer(t.attributes.color,3,Ft.FLOAT,!1,0,0)),Ft.drawArrays(Ft.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,o,n){if(r.visible!==!1){var a,s,l,h,u=N(e,t,i,r,n),c=u.attributes,f=o.attributes,d=!1,p=r.wireframe?1:0,m=16777215*o.id+2*u.id+p;if(m!==Xt&&(Xt=m,d=!0),d&&T(),n instanceof THREE.Mesh){var E=f.index;if(E){var g=o.offsets;g.length>1&&(d=!0);for(var _=0,x=g.length;x>_;_++){var y=g[_].index;if(d){for(s in c)l=c[s],a=f[s],l>=0&&(a?(h=a.itemSize,Ft.bindBuffer(Ft.ARRAY_BUFFER,a.buffer),v(l),Ft.vertexAttribPointer(l,h,Ft.FLOAT,!1,0,y*h*4)):r.defaultAttributeValues&&(2===r.defaultAttributeValues[s].length?Ft.vertexAttrib2fv(l,r.defaultAttributeValues[s]):3===r.defaultAttributeValues[s].length&&Ft.vertexAttrib3fv(l,r.defaultAttributeValues[s])));Ft.bindBuffer(Ft.ELEMENT_ARRAY_BUFFER,E.buffer)}Ft.drawElements(Ft.TRIANGLES,g[_].count,Ft.UNSIGNED_SHORT,2*g[_].start),Ot.info.render.calls++,Ot.info.render.vertices+=g[_].count,Ot.info.render.faces+=g[_].count/3}}else{if(d)for(s in c)"index"!==s&&(l=c[s],a=f[s],l>=0&&(a?(h=a.itemSize,Ft.bindBuffer(Ft.ARRAY_BUFFER,a.buffer),v(l),Ft.vertexAttribPointer(l,h,Ft.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[s]&&(2===r.defaultAttributeValues[s].length?Ft.vertexAttrib2fv(l,r.defaultAttributeValues[s]):3===r.defaultAttributeValues[s].length&&Ft.vertexAttrib3fv(l,r.defaultAttributeValues[s]))));var R=o.attributes.position;Ft.drawArrays(Ft.TRIANGLES,0,R.numItems/3),Ot.info.render.calls++,Ot.info.render.vertices+=R.numItems/3,Ot.info.render.faces+=R.numItems/3/3}}else if(n instanceof THREE.ParticleSystem){if(d){for(s in c)l=c[s],a=f[s],l>=0&&(a?(h=a.itemSize,Ft.bindBuffer(Ft.ARRAY_BUFFER,a.buffer),v(l),Ft.vertexAttribPointer(l,h,Ft.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[s]&&(2===r.defaultAttributeValues[s].length?Ft.vertexAttrib2fv(l,r.defaultAttributeValues[s]):3===r.defaultAttributeValues[s].length&&Ft.vertexAttrib3fv(l,r.defaultAttributeValues[s])));var R=f.position;Ft.drawArrays(Ft.POINTS,0,R.numItems/3),Ot.info.render.calls++,Ot.info.render.points+=R.numItems/3}}else if(n instanceof THREE.Line&&d){for(s in c)l=c[s],a=f[s],l>=0&&(a?(h=a.itemSize,Ft.bindBuffer(Ft.ARRAY_BUFFER,a.buffer),v(l),Ft.vertexAttribPointer(l,h,Ft.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[s]&&(2===r.defaultAttributeValues[s].length?Ft.vertexAttrib2fv(l,r.defaultAttributeValues[s]):3===r.defaultAttributeValues[s].length&&Ft.vertexAttrib3fv(l,r.defaultAttributeValues[s])));var b=n.type===THREE.LineStrip?Ft.LINE_STRIP:Ft.LINES;it(r.linewidth);var R=f.position;Ft.drawArrays(b,0,R.numItems/3),Ot.info.render.calls++,Ot.info.render.points+=R.numItems}}},this.renderBuffer=function(e,t,i,r,o,n){if(r.visible!==!1){var a,s,l,h=N(e,t,i,r,n),u=h.attributes,c=!1,f=r.wireframe?1:0,d=16777215*o.id+2*h.id+f;if(d!==Xt&&(Xt=d,c=!0),c&&T(),!r.morphTargets&&u.position>=0?c&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglVertexBuffer),v(u.position),Ft.vertexAttribPointer(u.position,3,Ft.FLOAT,!1,0,0)):n.morphTargetBase&&_(r,o,n),c){if(o.__webglCustomAttributesList)for(s=0,l=o.__webglCustomAttributesList.length;l>s;s++)a=o.__webglCustomAttributesList[s],u[a.buffer.belongsToAttribute]>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,a.buffer),v(u[a.buffer.belongsToAttribute]),Ft.vertexAttribPointer(u[a.buffer.belongsToAttribute],a.size,Ft.FLOAT,!1,0,0));u.color>=0&&(n.geometry.colors.length>0||n.geometry.faces.length>0?(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglColorBuffer),v(u.color),Ft.vertexAttribPointer(u.color,3,Ft.FLOAT,!1,0,0)):r.defaultAttributeValues&&Ft.vertexAttrib3fv(u.color,r.defaultAttributeValues.color)),u.normal>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglNormalBuffer),v(u.normal),Ft.vertexAttribPointer(u.normal,3,Ft.FLOAT,!1,0,0)),u.tangent>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglTangentBuffer),v(u.tangent),Ft.vertexAttribPointer(u.tangent,4,Ft.FLOAT,!1,0,0)),u.uv>=0&&(n.geometry.faceVertexUvs[0]?(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglUVBuffer),v(u.uv),Ft.vertexAttribPointer(u.uv,2,Ft.FLOAT,!1,0,0)):r.defaultAttributeValues&&Ft.vertexAttrib2fv(u.uv,r.defaultAttributeValues.uv)),u.uv2>=0&&(n.geometry.faceVertexUvs[1]?(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglUV2Buffer),v(u.uv2),Ft.vertexAttribPointer(u.uv2,2,Ft.FLOAT,!1,0,0)):r.defaultAttributeValues&&Ft.vertexAttrib2fv(u.uv2,r.defaultAttributeValues.uv2)),r.skinning&&u.skinIndex>=0&&u.skinWeight>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),v(u.skinIndex),Ft.vertexAttribPointer(u.skinIndex,4,Ft.FLOAT,!1,0,0),Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),v(u.skinWeight),Ft.vertexAttribPointer(u.skinWeight,4,Ft.FLOAT,!1,0,0)),u.lineDistance>=0&&(Ft.bindBuffer(Ft.ARRAY_BUFFER,o.__webglLineDistanceBuffer),v(u.lineDistance),Ft.vertexAttribPointer(u.lineDistance,1,Ft.FLOAT,!1,0,0))}if(n instanceof THREE.Mesh)r.wireframe?(it(r.wireframeLinewidth),c&&Ft.bindBuffer(Ft.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),Ft.drawElements(Ft.LINES,o.__webglLineCount,Ft.UNSIGNED_SHORT,0)):(c&&Ft.bindBuffer(Ft.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),Ft.drawElements(Ft.TRIANGLES,o.__webglFaceCount,Ft.UNSIGNED_SHORT,0)),Ot.info.render.calls++,Ot.info.render.vertices+=o.__webglFaceCount,Ot.info.render.faces+=o.__webglFaceCount/3;else if(n instanceof THREE.Line){var p=n.type===THREE.LineStrip?Ft.LINE_STRIP:Ft.LINES;it(r.linewidth),Ft.drawArrays(p,0,o.__webglLineCount),Ot.info.render.calls++}else n instanceof THREE.ParticleSystem&&(Ft.drawArrays(Ft.POINTS,0,o.__webglParticleCount),Ot.info.render.calls++,Ot.info.render.points+=o.__webglParticleCount)}},this.render=function(e,t,i,r){if(t instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var o,n,a,s,l,h=e.__lights,u=e.fog;for(jt=-1,_i=!0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Ei.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),mi.setFromMatrix(Ei),this.autoUpdateObjects&&this.initWebGLObjects(e),R(this.renderPluginsPre,e,t),Ot.info.render.calls=0,Ot.info.render.vertices=0,Ot.info.render.faces=0,Ot.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=e.__webglObjects,o=0,n=l.length;n>o;o++)a=l[o],s=a.object,a.id=o,a.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!mi.intersectsObject(s)||($(s,t),M(a),a.render=!0,this.sortObjects===!0&&(null!==s.renderDepth?a.z=s.renderDepth:(vi.setFromMatrixPosition(s.matrixWorld),vi.applyProjection(Ei),a.z=vi.z))));for(this.sortObjects&&l.sort(x),l=e.__webglObjectsImmediate,o=0,n=l.length;n>o;o++)a=l[o],s=a.object,s.visible&&($(s,t),w(a));if(e.overrideMaterial){var c=e.overrideMaterial;this.setBlending(c.blending,c.blendEquation,c.blendSrc,c.blendDst),this.setDepthTest(c.depthTest),this.setDepthWrite(c.depthWrite),rt(c.polygonOffset,c.polygonOffsetFactor,c.polygonOffsetUnits),b(e.__webglObjects,!1,"",t,h,u,!0,c),S(e.__webglObjectsImmediate,"",t,h,u,!1,c)}else{var c=null;this.setBlending(THREE.NoBlending),b(e.__webglObjects,!0,"opaque",t,h,u,!1,c),S(e.__webglObjectsImmediate,"opaque",t,h,u,!1,c),b(e.__webglObjects,!1,"transparent",t,h,u,!0,c),S(e.__webglObjectsImmediate,"transparent",t,h,u,!0,c)}R(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&gt(i),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,i,r,o){var n=N(e,t,i,r,o);Xt=-1,Ot.setMaterialFaces(r),o.immediateRenderCallback?o.immediateRenderCallback(n,Ft,mi):o.render(function(e){Ot.renderBufferImmediate(e,n,r)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)A(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)U(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,i=e.__webglObjects.length;i>t;t++){var r=e.__webglObjects[t].object;void 0===r.__webglInit&&(void 0!==r.__webglActive&&U(r,e),A(r,e)),P(r)}},this.initMaterial=function(e,t,i,r){e.addEventListener("dispose",Bi);var o,n,a,s,l,h,u;e instanceof THREE.MeshDepthMaterial?u="depth":e instanceof THREE.MeshNormalMaterial?u="normal":e instanceof THREE.MeshBasicMaterial?u="basic":e instanceof THREE.MeshLambertMaterial?u="lambert":e instanceof THREE.MeshPhongMaterial?u="phong":e instanceof THREE.LineBasicMaterial?u="basic":e instanceof THREE.LineDashedMaterial?u="dashed":e instanceof THREE.ParticleSystemMaterial&&(u="particle_basic"),u&&I(e,THREE.ShaderLib[u]),s=xt(t),h=yt(t),l=_t(r),a={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:Mi&&r&&r.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:h,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=nt(u,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,a,e.index0AttributeName);var c=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var f,d="morphTarget";for(n=0;n<this.maxMorphTargets;n++)f=d+n,c[f]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var f,d="morphNormal";for(n=0;n<this.maxMorphNormals;n++)f=d+n,c[f]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(o in e.uniforms)e.uniformsList.push([e.uniforms[o],o])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Ft.disable(Ft.CULL_FACE):(Ft.frontFace(t===THREE.FrontFaceDirectionCW?Ft.CW:Ft.CCW),Ft.cullFace(e===THREE.CullFaceBack?Ft.BACK:e===THREE.CullFaceFront?Ft.FRONT:Ft.FRONT_AND_BACK),Ft.enable(Ft.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,i=e.side===THREE.BackSide;Qt!==t&&(t?Ft.disable(Ft.CULL_FACE):Ft.enable(Ft.CULL_FACE),Qt=t),Zt!==i&&(Ft.frontFace(i?Ft.CW:Ft.CCW),Zt=i)},this.setDepthTest=function(e){ii!==e&&(e?Ft.enable(Ft.DEPTH_TEST):Ft.disable(Ft.DEPTH_TEST),ii=e)},this.setDepthWrite=function(e){ri!==e&&(Ft.depthMask(e),ri=e)},this.setBlending=function(e,t,i,r){e!==$t&&(e===THREE.NoBlending?Ft.disable(Ft.BLEND):e===THREE.AdditiveBlending?(Ft.enable(Ft.BLEND),Ft.blendEquation(Ft.FUNC_ADD),Ft.blendFunc(Ft.SRC_ALPHA,Ft.ONE)):e===THREE.SubtractiveBlending?(Ft.enable(Ft.BLEND),Ft.blendEquation(Ft.FUNC_ADD),Ft.blendFunc(Ft.ZERO,Ft.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Ft.enable(Ft.BLEND),Ft.blendEquation(Ft.FUNC_ADD),Ft.blendFunc(Ft.ZERO,Ft.SRC_COLOR)):e===THREE.CustomBlending?Ft.enable(Ft.BLEND):(Ft.enable(Ft.BLEND),Ft.blendEquationSeparate(Ft.FUNC_ADD,Ft.FUNC_ADD),Ft.blendFuncSeparate(Ft.SRC_ALPHA,Ft.ONE_MINUS_SRC_ALPHA,Ft.ONE,Ft.ONE_MINUS_SRC_ALPHA)),$t=e),e===THREE.CustomBlending?(t!==Jt&&(Ft.blendEquation(Tt(t)),Jt=t),(i!==ei||r!==ti)&&(Ft.blendFunc(Tt(i),Tt(r)),ei=i,ti=r)):(Jt=null,ei=null,ti=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Ui),e.__webglTexture=Ft.createTexture(),Ot.info.memory.textures++),Ft.activeTexture(Ft.TEXTURE0+t),Ft.bindTexture(Ft.TEXTURE_2D,e.__webglTexture),Ft.pixelStorei(Ft.UNPACK_FLIP_Y_WEBGL,e.flipY),Ft.pixelStorei(Ft.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Ft.pixelStorei(Ft.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=ut(i.width)&&ut(i.height),o=Tt(e.format),n=Tt(e.type);ct(Ft.TEXTURE_2D,e,r);var a,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&r){for(var l=0,h=s.length;h>l;l++)a=s[l],Ft.texImage2D(Ft.TEXTURE_2D,l,o,a.width,a.height,0,o,n,a.data);e.generateMipmaps=!1}else Ft.texImage2D(Ft.TEXTURE_2D,0,o,i.width,i.height,0,o,n,i.data);else if(e instanceof THREE.CompressedTexture)for(var l=0,h=s.length;h>l;l++)a=s[l],e.format!==THREE.RGBAFormat?Ft.compressedTexImage2D(Ft.TEXTURE_2D,l,o,a.width,a.height,0,a.data):Ft.texImage2D(Ft.TEXTURE_2D,l,o,a.width,a.height,0,o,n,a.data);else if(s.length>0&&r){for(var l=0,h=s.length;h>l;l++)a=s[l],Ft.texImage2D(Ft.TEXTURE_2D,l,o,o,n,a);e.generateMipmaps=!1}else Ft.texImage2D(Ft.TEXTURE_2D,0,o,o,n,e.image);e.generateMipmaps&&r&&Ft.generateMipmap(Ft.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Ft.activeTexture(Ft.TEXTURE0+t),Ft.bindTexture(Ft.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",zi),e.__webglTexture=Ft.createTexture(),Ot.info.memory.textures++;var i=ut(e.width)&&ut(e.height),r=Tt(e.format),o=Tt(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,e.__webglTexture),ct(Ft.TEXTURE_CUBE_MAP,e,i);for(var n=0;6>n;n++)e.__webglFramebuffer[n]=Ft.createFramebuffer(),e.__webglRenderbuffer[n]=Ft.createRenderbuffer(),Ft.texImage2D(Ft.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,r,e.width,e.height,0,r,o,null),mt(e.__webglFramebuffer[n],e,Ft.TEXTURE_CUBE_MAP_POSITIVE_X+n),Et(e.__webglRenderbuffer[n],e);i&&Ft.generateMipmap(Ft.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Ft.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Ft.createRenderbuffer(),Ft.bindTexture(Ft.TEXTURE_2D,e.__webglTexture),ct(Ft.TEXTURE_2D,e,i),Ft.texImage2D(Ft.TEXTURE_2D,0,r,e.width,e.height,0,r,o,null),mt(e.__webglFramebuffer,e,Ft.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Ft.framebufferRenderbuffer(Ft.FRAMEBUFFER,Ft.DEPTH_ATTACHMENT,Ft.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Ft.framebufferRenderbuffer(Ft.FRAMEBUFFER,Ft.DEPTH_STENCIL_ATTACHMENT,Ft.RENDERBUFFER,e.__webglRenderbuffer):Et(e.__webglRenderbuffer,e),i&&Ft.generateMipmap(Ft.TEXTURE_2D);t?Ft.bindTexture(Ft.TEXTURE_CUBE_MAP,null):Ft.bindTexture(Ft.TEXTURE_2D,null),Ft.bindRenderbuffer(Ft.RENDERBUFFER,null),Ft.bindFramebuffer(Ft.FRAMEBUFFER,null)}var a,s,l,h,u;e?(a=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,l=e.height,h=0,u=0):(a=null,s=ui,l=ci,h=li,u=hi),a!==Wt&&(Ft.bindFramebuffer(Ft.FRAMEBUFFER,a),Ft.viewport(h,u,s,l),Wt=a),fi=s,di=l},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)};